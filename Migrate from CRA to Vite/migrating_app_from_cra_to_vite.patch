diff --git a/.eslintrc.js b/.eslintrc.js
new file mode 100644
index 0000000..eec0f0d
--- /dev/null
+++ b/.eslintrc.js
@@ -0,0 +1,44 @@
+module.exports = {
+  extends: [
+    // By extending from a plugin config, we can get recommended rules without having to add them manually.
+    'eslint:recommended',
+    'plugin:react/recommended',
+    'plugin:import/recommended',
+    'plugin:jsx-a11y/recommended',
+    'plugin:@typescript-eslint/recommended',
+    // This disables the formatting rules in ESLint that Prettier is going to be responsible for handling.
+    // Make sure it's always the last config, so it gets the chance to override other configs.
+    'eslint-config-prettier',
+  ],
+  settings: {
+    react: {
+      // Tells eslint-plugin-react to automatically detect the version of React to use.
+      version: 'detect',
+    },
+    // Tells eslint how to resolve imports
+    'import/resolver': {
+      node: {
+        paths: ['src'],
+        extensions: ['.js', '.jsx', '.ts', '.tsx'],
+      },
+    },
+  },
+  rules: {
+    'react/react-in-jsx-scope': 'off',
+    'import/no-named-as-default': 0,
+    'react/jsx-filename-extension': [1, { extensions: ['.js', '.jsx', '.ts', '.tsx'] }],
+    '@typescript-eslint/ban-types': [
+      'error',
+      {
+        extendDefaults: true,
+        types: {
+          '{}': false,
+        },
+      },
+    ],
+  },
+  env: {
+    browser: true,
+    node: true,
+  },
+}
diff --git a/.github/workflows/ci-run-tests.yml b/.github/workflows/ci-run-tests.yml
index c4e3b53..9ccabe7 100644
--- a/.github/workflows/ci-run-tests.yml
+++ b/.github/workflows/ci-run-tests.yml
@@ -6,18 +6,18 @@ on:
       - main
 
 env:
-  REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
-  REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
-  REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
-  REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
-  REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
-  REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
-  REACT_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}
-  REACT_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY: ${{ secrets.REACT_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY }}
-  REACT_APP_FIREBASE_APP_CHECK_USE_DEBUG_TOKEN: ${{ true }}
-  REACT_APP_FIREBASE_APP_CHECK_DEBUG_TOKEN: ${{ secrets.REACT_APP_FIREBASE_APP_CHECK_DEBUG_TOKEN }}
-  REACT_APP_FIREBASE_USE_LOCAL_FUNCTIONS: ${{ secrets.REACT_APP_FIREBASE_USE_LOCAL_FUNCTIONS }}
-  REACT_APP_FIREBASE_USE_LOCAL_AUTH: ${{ secrets.REACT_APP_FIREBASE_USE_LOCAL_AUTH }}
+  VITE_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
+  VITE_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
+  VITE_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
+  VITE_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
+  VITE_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
+  VITE_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
+  VITE_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}
+  VITE_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY: ${{ secrets.REACT_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY }}
+  VITE_APP_FIREBASE_APP_CHECK_USE_DEBUG_TOKEN: ${{ true }}
+  VITE_APP_FIREBASE_APP_CHECK_DEBUG_TOKEN: ${{ secrets.REACT_APP_FIREBASE_APP_CHECK_DEBUG_TOKEN }}
+  VITE_APP_FIREBASE_USE_LOCAL_FUNCTIONS: ${{ secrets.REACT_APP_FIREBASE_USE_LOCAL_FUNCTIONS }}
+  VITE_APP_FIREBASE_USE_LOCAL_AUTH: ${{ secrets.REACT_APP_FIREBASE_USE_LOCAL_AUTH }}
 
 jobs:
   run-tests:
diff --git a/.github/workflows/firebase-deploy-on-merge.yml b/.github/workflows/firebase-deploy-on-merge.yml
index ccc370c..b68dca6 100644
--- a/.github/workflows/firebase-deploy-on-merge.yml
+++ b/.github/workflows/firebase-deploy-on-merge.yml
@@ -8,16 +8,16 @@ on:
       - main
 
 env:
-  REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
-  REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
-  REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
-  REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
-  REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
-  REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
-  REACT_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}
-  REACT_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY: ${{ secrets.REACT_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY }}
-  REACT_APP_FIREBASE_USE_LOCAL_FUNCTIONS: ${{ secrets.REACT_APP_FIREBASE_USE_LOCAL_FUNCTIONS }}
-  REACT_APP_FIREBASE_USE_LOCAL_AUTH: ${{ secrets.REACT_APP_FIREBASE_USE_LOCAL_AUTH }}
+  VITE_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
+  VITE_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
+  VITE_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
+  VITE_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
+  VITE_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
+  VITE_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
+  VITE_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}
+  VITE_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY: ${{ secrets.REACT_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY }}
+  VITE_APP_FIREBASE_USE_LOCAL_FUNCTIONS: ${{ secrets.REACT_APP_FIREBASE_USE_LOCAL_FUNCTIONS }}
+  VITE_APP_FIREBASE_USE_LOCAL_AUTH: ${{ secrets.REACT_APP_FIREBASE_USE_LOCAL_AUTH }}
 
 jobs:
   build_and_deploy:
@@ -40,7 +40,7 @@ jobs:
       - name: Deploy firebase hosting
         run: npm ci && npm run build && cp firebase-dev.json firebase.json
 
-      - uses: FirebaseExtended/action-hosting-deploy@v0.7.1
+      - uses: FirebaseExtended/action-hosting-deploy@v0
         with:
           repoToken: '${{ secrets.GITHUB_TOKEN }}'
           firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JOY_RECEPTIONIST_DEV }}'
@@ -57,7 +57,3 @@ jobs:
       - name: Deploy functions to the dev env
         run: |
           firebase --project=joy-receptionist-dev deploy --only functions --non-interactive --debug
-
-      - name: Deploy firestore rules to the dev env
-        run: |
-          firebase --project=joy-receptionist-dev deploy --only firestore:rules --non-interactive --debug
diff --git a/.github/workflows/firebase-hosting-pull-request.yml b/.github/workflows/firebase-hosting-pull-request.yml
index 3f8901f..17d1fdf 100644
--- a/.github/workflows/firebase-hosting-pull-request.yml
+++ b/.github/workflows/firebase-hosting-pull-request.yml
@@ -5,31 +5,27 @@ name: Deploy to Firebase Hosting preview on PR
 on: pull_request
 
 env:
-  REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
-  REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
-  REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
-  REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
-  REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
-  REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
-  REACT_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}
-  REACT_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY: ${{ secrets.REACT_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY }}
-  REACT_APP_FIREBASE_APP_CHECK_USE_DEBUG_TOKEN: ${{ true }}
-  REACT_APP_FIREBASE_APP_CHECK_DEBUG_TOKEN: ${{ secrets.REACT_APP_FIREBASE_APP_CHECK_DEBUG_TOKEN }}
-  REACT_APP_FIREBASE_USE_LOCAL_FUNCTIONS: ${{ secrets.REACT_APP_FIREBASE_USE_LOCAL_FUNCTIONS }}
-  REACT_APP_FIREBASE_USE_LOCAL_AUTH: ${{ secrets.REACT_APP_FIREBASE_USE_LOCAL_AUTH }}
+  VITE_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
+  VITE_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
+  VITE_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
+  VITE_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
+  VITE_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
+  VITE_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
+  VITE_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}
+  VITE_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY: ${{ secrets.REACT_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY }}
+  VITE_APP_FIREBASE_APP_CHECK_USE_DEBUG_TOKEN: ${{ true }}
+  VITE_APP_FIREBASE_APP_CHECK_DEBUG_TOKEN: ${{ secrets.REACT_APP_FIREBASE_APP_CHECK_DEBUG_TOKEN }}
+  VITE_APP_FIREBASE_USE_LOCAL_FUNCTIONS: ${{ secrets.REACT_APP_FIREBASE_USE_LOCAL_FUNCTIONS }}
+  VITE_APP_FIREBASE_USE_LOCAL_AUTH: ${{ secrets.REACT_APP_FIREBASE_USE_LOCAL_AUTH }}
 
 jobs:
   build_and_preview:
     if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
     runs-on: ubuntu-latest
-    permissions:
-      contents: read
-      pull-requests: write
-      checks: write
     steps:
-      - uses: actions/checkout@v4
+      - uses: actions/checkout@v3
       - run: npm ci && npm run build && cp firebase-dev.json firebase.json
-      - uses: FirebaseExtended/action-hosting-deploy@v0.7.1
+      - uses: FirebaseExtended/action-hosting-deploy@v0
         with:
           repoToken: '${{ secrets.GITHUB_TOKEN }}'
           firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JOY_RECEPTIONIST_DEV }}'
diff --git a/README.md b/README.md
index 63db37a..2d5c900 100644
--- a/README.md
+++ b/README.md
@@ -28,17 +28,17 @@ Open http://localhost:3000 to view the app in your browser.
 
 This will by default use deployed cloud functions.
 
-REACT_APP_FIREBASE_API_KEY="AIza\*\*\*\*\*\*\*\*\*\*\*\*\*\*"
-REACT_APP_FIREBASE_AUTH_DOMAIN="\*\*\*\*\*\*\*.firebaseapp.com"
-REACT_APP_FIREBASE_PROJECT_ID="\*\*\*\*\*\*\*"
-REACT_APP_FIREBASE_STORAGE_BUCKET="\*\*\*\*\*\*\*.appspot.com"
-REACT_APP_FIREBASE_MESSAGING_SENDER_ID="\*\*\*\*\*\*\*"
-REACT_APP_FIREBASE_APP_ID="\*\*\*\*\*\*\*"
-REACT_APP_FIREBASE_MEASUREMENT_ID="G-\*\*\*\*\*\*\*"
-REACT_APP_FIREBASE_USE_LOCAL_FUNCTIONS=false <--- Set to true to run against local cloud function emulator
-REACT_APP_FIREBASE_USE_LOCAL_AUTH=false <--- Set to true to use local auth emulator
+VITE_APP_FIREBASE_API_KEY="AIza\*\*\*\*\*\*\*\*\*\*\*\*\*\*"
+VITE_APP_FIREBASE_AUTH_DOMAIN="\*\*\*\*\*\*\*.firebaseapp.com"
+VITE_APP_FIREBASE_PROJECT_ID="\*\*\*\*\*\*\*"
+VITE_APP_FIREBASE_STORAGE_BUCKET="\*\*\*\*\*\*\*.appspot.com"
+VITE_APP_FIREBASE_MESSAGING_SENDER_ID="\*\*\*\*\*\*\*"
+VITE_APP_FIREBASE_APP_ID="\*\*\*\*\*\*\*"
+VITE_APP_FIREBASE_MEASUREMENT_ID="G-\*\*\*\*\*\*\*"
+VITE_APP_FIREBASE_USE_LOCAL_FUNCTIONS=false <--- Set to true to run against local cloud function emulator
+VITE_APP_FIREBASE_USE_LOCAL_AUTH=false <--- Set to true to use local auth emulator
 REACT_APP_FIREBASE_USE_LOCAL_FIRESTORE=false <--- Set to true to directly use the local firestore emulator
-REACT_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY= <--- Can be empty when running locally
+VITE_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY= <--- Can be empty when running locally
 JOYDAY_CRISP_ENABLE=false <--- Set to false to disable when testing
 
 ### Switching between dev and prod-mode
@@ -56,7 +56,7 @@ The emulator can be started with either `firebase emulators:start` or `npm run s
 
 ### Starting the App
 
-Make sure the `.env`-file is configured using the `REACT_APP_FIREBASE_USE_LOCAL_FUNCTIONS` and `REACT_APP_FIREBASE_USE_LOCAL_AUTH` variables for local or remote services. Run
+Make sure the `.env`-file is configured using the `VITE_APP_FIREBASE_USE_LOCAL_FUNCTIONS` and `VITE_APP_FIREBASE_USE_LOCAL_AUTH` variables for local or remote services. Run
 `./switch-project.sh dev` to use the dev-environment. Use two different terminals to first start the emulator with `npm run start:emulator` and then `npm run start:dev` in the second terminal to launch the app. After startup it should be available on https://localhost:3000.
 
 ### Using the App
@@ -300,7 +300,7 @@ gcloud iam service-accounts add-iam-policy-binding "github-actions-dev-sa@${PROJ
   --role="roles/iam.workloadIdentityUser" \
   --member="principalSet://iam.googleapis.com/${WORKLOAD_IDENTITY_POOL_ID}/attribute.repository/${REPO}"
 
-export SERVICE_ACCOUNT_PERMISSIONS=firebase.projects.get,cloudfunctions.functions.create,cloudfunctions.functions.delete,cloudfunctions.functions.get,cloudfunctions.functions.list,cloudfunctions.functions.update,cloudfunctions.operations.get,cloudscheduler.jobs.update,datastore.databases.getMetadata,iam.serviceAccounts.actAs,secretmanager.secrets.get,secretmanager.versions.get,datastore.indexes.create,datastore.indexes.delete,datastore.indexes.list,datastore.indexes.update,firebaserules.rulesets.test,firebaserules.releases.get,firebaserules.releases.list,firebaserules.releases.update,firebaserules.rulesets.create,firebaserules.rulesets.delete,firebaserules.rulesets.get,firebaserules.rulesets.list
+export SERVICE_ACCOUNT_PERMISSIONS=firebase.projects.get,cloudfunctions.functions.create,cloudfunctions.functions.delete,cloudfunctions.functions.get,cloudfunctions.functions.list,cloudfunctions.functions.update,cloudfunctions.operations.get,cloudscheduler.jobs.update,datastore.databases.getMetadata,iam.serviceAccounts.actAs,secretmanager.secrets.get,secretmanager.versions.get
 
 gcloud iam roles create FirebaseGithubCD \
   --project=${PROJECT_ID}
diff --git a/firestore.rules b/firestore.rules
index 65c600e..b7513be 100644
--- a/firestore.rules
+++ b/firestore.rules
@@ -38,8 +38,8 @@ service cloud.firestore {
     match /users/{userId} {
       allow read, write: if isUserMatch(userId);
 
-      // Matches the 'subscription' document in a user's 'profile' subcollection
-      match /profile/subscription {
+      // Matches the 'system' document in a user's 'profile' subcollection
+      match /profile/system {
         allow read: if isUserMatch(userId);
         allow write: if false;
       }
diff --git a/functions/package-lock.json b/functions/package-lock.json
index 90d039c..8f4af2b 100644
--- a/functions/package-lock.json
+++ b/functions/package-lock.json
@@ -13,7 +13,7 @@
         "es6-promise-pool": "^2.5.0",
         "firebase-admin": "^11.11.1",
         "firebase-functions": "^4.9.0",
-        "nlpcloud": "^2.0.5",
+        "nlpcloud": "^1.0.48",
         "stripe": "^14.24.0",
         "uuid": "^9.0.1"
       },
@@ -35,7 +35,16 @@
         "typescript": "^5.4.4"
       },
       "engines": {
-        "node": "20"
+        "node": "18"
+      }
+    },
+    "node_modules/@aashutoshrathi/word-wrap": {
+      "version": "1.2.6",
+      "resolved": "https://registry.npmjs.org/@aashutoshrathi/word-wrap/-/word-wrap-1.2.6.tgz",
+      "integrity": "sha512-1Yjs2SvM8TflER/OD3cOjhWWOZb58A2t7wpE2S9XfBYTiIl+XFhQG2bjy4Pu1I+EAlCNUzRDYDdFwFYUKvXcIA==",
+      "dev": true,
+      "engines": {
+        "node": ">=0.10.0"
       }
     },
     "node_modules/@ampproject/remapping": {
@@ -74,21 +83,21 @@
       }
     },
     "node_modules/@babel/core": {
-      "version": "7.24.5",
-      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.24.5.tgz",
-      "integrity": "sha512-tVQRucExLQ02Boi4vdPp49svNGcfL2GhdTCT9aldhXgCJVAI21EtRfBettiuLUwce/7r6bFdgs6JFkcdTiFttA==",
+      "version": "7.24.4",
+      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.24.4.tgz",
+      "integrity": "sha512-MBVlMXP+kkl5394RBLSxxk/iLTeVGuXTV3cIDXavPpMMqnSnt6apKgan/U8O3USWZCWZT/TbgfEpKa4uMgN4Dg==",
       "dev": true,
       "dependencies": {
         "@ampproject/remapping": "^2.2.0",
         "@babel/code-frame": "^7.24.2",
-        "@babel/generator": "^7.24.5",
+        "@babel/generator": "^7.24.4",
         "@babel/helper-compilation-targets": "^7.23.6",
-        "@babel/helper-module-transforms": "^7.24.5",
-        "@babel/helpers": "^7.24.5",
-        "@babel/parser": "^7.24.5",
+        "@babel/helper-module-transforms": "^7.23.3",
+        "@babel/helpers": "^7.24.4",
+        "@babel/parser": "^7.24.4",
         "@babel/template": "^7.24.0",
-        "@babel/traverse": "^7.24.5",
-        "@babel/types": "^7.24.5",
+        "@babel/traverse": "^7.24.1",
+        "@babel/types": "^7.24.0",
         "convert-source-map": "^2.0.0",
         "debug": "^4.1.0",
         "gensync": "^1.0.0-beta.2",
@@ -113,12 +122,12 @@
       }
     },
     "node_modules/@babel/generator": {
-      "version": "7.24.5",
-      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.24.5.tgz",
-      "integrity": "sha512-x32i4hEXvr+iI0NEoEfDKzlemF8AmtOP8CcrRaEcpzysWuoEb1KknpcvMsHKPONoKZiDuItklgWhB18xEhr9PA==",
+      "version": "7.24.4",
+      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.24.4.tgz",
+      "integrity": "sha512-Xd6+v6SnjWVx/nus+y0l1sxMOTOMBkyL4+BIdbALyatQnAe/SRVjANeDPSCYaX+i1iJmuGSKf3Z+E+V/va1Hvw==",
       "dev": true,
       "dependencies": {
-        "@babel/types": "^7.24.5",
+        "@babel/types": "^7.24.0",
         "@jridgewell/gen-mapping": "^0.3.5",
         "@jridgewell/trace-mapping": "^0.3.25",
         "jsesc": "^2.5.1"
@@ -199,16 +208,16 @@
       }
     },
     "node_modules/@babel/helper-module-transforms": {
-      "version": "7.24.5",
-      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.24.5.tgz",
-      "integrity": "sha512-9GxeY8c2d2mdQUP1Dye0ks3VDyIMS98kt/llQ2nUId8IsWqTF0l1LkSX0/uP7l7MCDrzXS009Hyhe2gzTiGW8A==",
+      "version": "7.23.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.23.3.tgz",
+      "integrity": "sha512-7bBs4ED9OmswdfDzpz4MpWgSrV7FXlc3zIagvLFjS5H+Mk7Snr21vQ6QwrsoCGMfNC4e4LQPdoULEt4ykz0SRQ==",
       "dev": true,
       "dependencies": {
         "@babel/helper-environment-visitor": "^7.22.20",
-        "@babel/helper-module-imports": "^7.24.3",
-        "@babel/helper-simple-access": "^7.24.5",
-        "@babel/helper-split-export-declaration": "^7.24.5",
-        "@babel/helper-validator-identifier": "^7.24.5"
+        "@babel/helper-module-imports": "^7.22.15",
+        "@babel/helper-simple-access": "^7.22.5",
+        "@babel/helper-split-export-declaration": "^7.22.6",
+        "@babel/helper-validator-identifier": "^7.22.20"
       },
       "engines": {
         "node": ">=6.9.0"
@@ -218,33 +227,33 @@
       }
     },
     "node_modules/@babel/helper-plugin-utils": {
-      "version": "7.24.5",
-      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.24.5.tgz",
-      "integrity": "sha512-xjNLDopRzW2o6ba0gKbkZq5YWEBaK3PCyTOY1K2P/O07LGMhMqlMXPxwN4S5/RhWuCobT8z0jrlKGlYmeR1OhQ==",
+      "version": "7.24.0",
+      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.24.0.tgz",
+      "integrity": "sha512-9cUznXMG0+FxRuJfvL82QlTqIzhVW9sL0KjMPHhAOOvpQGL8QtdxnBKILjBqxlHyliz0yCa1G903ZXI/FuHy2w==",
       "dev": true,
       "engines": {
         "node": ">=6.9.0"
       }
     },
     "node_modules/@babel/helper-simple-access": {
-      "version": "7.24.5",
-      "resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.24.5.tgz",
-      "integrity": "sha512-uH3Hmf5q5n7n8mz7arjUlDOCbttY/DW4DYhE6FUsjKJ/oYC1kQQUvwEQWxRwUpX9qQKRXeqLwWxrqilMrf32sQ==",
+      "version": "7.22.5",
+      "resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.22.5.tgz",
+      "integrity": "sha512-n0H99E/K+Bika3++WNL17POvo4rKWZ7lZEp1Q+fStVbUi8nxPQEBOlTmCOxW/0JsS56SKKQ+ojAe2pHKJHN35w==",
       "dev": true,
       "dependencies": {
-        "@babel/types": "^7.24.5"
+        "@babel/types": "^7.22.5"
       },
       "engines": {
         "node": ">=6.9.0"
       }
     },
     "node_modules/@babel/helper-split-export-declaration": {
-      "version": "7.24.5",
-      "resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.24.5.tgz",
-      "integrity": "sha512-5CHncttXohrHk8GWOFCcCl4oRD9fKosWlIRgWm4ql9VYioKm52Mk2xsmoohvm7f3JoiLSM5ZgJuRaf5QZZYd3Q==",
+      "version": "7.22.6",
+      "resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.22.6.tgz",
+      "integrity": "sha512-AsUnxuLhRYsisFiaJwvp1QF+I3KjD5FOxut14q/GzovUe6orHLesW2C7d754kRm53h5gqrz6sFl6sxc4BVtE/g==",
       "dev": true,
       "dependencies": {
-        "@babel/types": "^7.24.5"
+        "@babel/types": "^7.22.5"
       },
       "engines": {
         "node": ">=6.9.0"
@@ -260,9 +269,9 @@
       }
     },
     "node_modules/@babel/helper-validator-identifier": {
-      "version": "7.24.5",
-      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.24.5.tgz",
-      "integrity": "sha512-3q93SSKX2TWCG30M2G2kwaKeTYgEUp5Snjuj8qm729SObL6nbtUldAi37qbxkD5gg3xnBio+f9nqpSepGZMvxA==",
+      "version": "7.22.20",
+      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.22.20.tgz",
+      "integrity": "sha512-Y4OZ+ytlatR8AI+8KZfKuL5urKp7qey08ha31L8b3BwewJAoJamTzyvxPR/5D+KkdJCGPq/+8TukHBlY10FX9A==",
       "dev": true,
       "engines": {
         "node": ">=6.9.0"
@@ -278,26 +287,26 @@
       }
     },
     "node_modules/@babel/helpers": {
-      "version": "7.24.5",
-      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.24.5.tgz",
-      "integrity": "sha512-CiQmBMMpMQHwM5m01YnrM6imUG1ebgYJ+fAIW4FZe6m4qHTPaRHti+R8cggAwkdz4oXhtO4/K9JWlh+8hIfR2Q==",
+      "version": "7.24.4",
+      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.24.4.tgz",
+      "integrity": "sha512-FewdlZbSiwaVGlgT1DPANDuCHaDMiOo+D/IDYRFYjHOuv66xMSJ7fQwwODwRNAPkADIO/z1EoF/l2BCWlWABDw==",
       "dev": true,
       "dependencies": {
         "@babel/template": "^7.24.0",
-        "@babel/traverse": "^7.24.5",
-        "@babel/types": "^7.24.5"
+        "@babel/traverse": "^7.24.1",
+        "@babel/types": "^7.24.0"
       },
       "engines": {
         "node": ">=6.9.0"
       }
     },
     "node_modules/@babel/highlight": {
-      "version": "7.24.5",
-      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.24.5.tgz",
-      "integrity": "sha512-8lLmua6AVh/8SLJRRVD6V8p73Hir9w5mJrhE+IPpILG31KKlI9iz5zmBYKcWPS59qSfgP9RaSBQSHHE81WKuEw==",
+      "version": "7.24.2",
+      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.24.2.tgz",
+      "integrity": "sha512-Yac1ao4flkTxTteCDZLEvdxg2fZfz1v8M4QpaGypq/WPDqg3ijHYbDfs+LG5hvzSoqaSZ9/Z9lKSP3CjZjv+pA==",
       "dev": true,
       "dependencies": {
-        "@babel/helper-validator-identifier": "^7.24.5",
+        "@babel/helper-validator-identifier": "^7.22.20",
         "chalk": "^2.4.2",
         "js-tokens": "^4.0.0",
         "picocolors": "^1.0.0"
@@ -378,9 +387,9 @@
       }
     },
     "node_modules/@babel/parser": {
-      "version": "7.24.5",
-      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.24.5.tgz",
-      "integrity": "sha512-EOv5IK8arwh3LI47dz1b0tKUb/1uhHAnHJOrjgtQMIpu1uXd9mlFrJg9IUgGUgZ41Ch0K8REPTYpO7B76b4vJg==",
+      "version": "7.24.4",
+      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.24.4.tgz",
+      "integrity": "sha512-zTvEBcghmeBma9QIGunWevvBAp4/Qu9Bdq+2k0Ot4fVMD6v3dsC9WOcRSKk7tRRyBM/53yKMJko9xOatGQAwSg==",
       "devOptional": true,
       "bin": {
         "parser": "bin/babel-parser.js"
@@ -581,19 +590,19 @@
       }
     },
     "node_modules/@babel/traverse": {
-      "version": "7.24.5",
-      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.24.5.tgz",
-      "integrity": "sha512-7aaBLeDQ4zYcUFDUD41lJc1fG8+5IU9DaNSJAgal866FGvmD5EbWQgnEC6kO1gGLsX0esNkfnJSndbTXA3r7UA==",
+      "version": "7.24.1",
+      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.24.1.tgz",
+      "integrity": "sha512-xuU6o9m68KeqZbQuDt2TcKSxUw/mrsvavlEqQ1leZ/B+C9tk6E4sRWy97WaXgvq5E+nU3cXMxv3WKOCanVMCmQ==",
       "dev": true,
       "dependencies": {
-        "@babel/code-frame": "^7.24.2",
-        "@babel/generator": "^7.24.5",
+        "@babel/code-frame": "^7.24.1",
+        "@babel/generator": "^7.24.1",
         "@babel/helper-environment-visitor": "^7.22.20",
         "@babel/helper-function-name": "^7.23.0",
         "@babel/helper-hoist-variables": "^7.22.5",
-        "@babel/helper-split-export-declaration": "^7.24.5",
-        "@babel/parser": "^7.24.5",
-        "@babel/types": "^7.24.5",
+        "@babel/helper-split-export-declaration": "^7.22.6",
+        "@babel/parser": "^7.24.1",
+        "@babel/types": "^7.24.0",
         "debug": "^4.3.1",
         "globals": "^11.1.0"
       },
@@ -611,13 +620,13 @@
       }
     },
     "node_modules/@babel/types": {
-      "version": "7.24.5",
-      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.24.5.tgz",
-      "integrity": "sha512-6mQNsaLeXTw0nxYUYu+NSa4Hx4BlF1x1x8/PMFbiR+GBSr+2DkECc69b8hgy2frEodNcvPffeH8YfWd3LI6jhQ==",
+      "version": "7.24.0",
+      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.24.0.tgz",
+      "integrity": "sha512-+j7a5c253RfKh8iABBhywc8NSfP5LURe7Uh4qpsh6jc+aLJguvmIUBdjSdEMQv2bENrCR5MfRdjGo7vzS/ob7w==",
       "dev": true,
       "dependencies": {
-        "@babel/helper-string-parser": "^7.24.1",
-        "@babel/helper-validator-identifier": "^7.24.5",
+        "@babel/helper-string-parser": "^7.23.4",
+        "@babel/helper-validator-identifier": "^7.22.20",
         "to-fast-properties": "^2.0.0"
       },
       "engines": {
@@ -753,6 +762,27 @@
         "@firebase/app-compat": "0.x"
       }
     },
+    "node_modules/@firebase/analytics-compat/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/analytics-compat/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/@firebase/analytics-types": {
       "version": "0.8.1",
       "resolved": "https://registry.npmjs.org/@firebase/analytics-types/-/analytics-types-0.8.1.tgz",
@@ -760,10 +790,41 @@
       "dev": true,
       "peer": true
     },
+    "node_modules/@firebase/analytics/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/analytics/node_modules/@firebase/logger": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.1.tgz",
+      "integrity": "sha512-tTIixB5UJbG9ZHSGZSZdX7THr3KWOLrejZ9B7jYsm6fpwgRNngKznQKA2wgYVyvBc1ta7dGFh9NtJ8n7qfiYIw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/analytics/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/@firebase/app": {
-      "version": "0.10.2",
-      "resolved": "https://registry.npmjs.org/@firebase/app/-/app-0.10.2.tgz",
-      "integrity": "sha512-Sk0lQYG0IRIUXkj6Ovaxu0o1E1OdC+IR+UYEYLjXuddr6YjnpFuZ69rTxVja2Ef4TpidJky9o8OoVIaXNjDJ5A==",
+      "version": "0.10.0",
+      "resolved": "https://registry.npmjs.org/@firebase/app/-/app-0.10.0.tgz",
+      "integrity": "sha512-bemcsqQD4teEnCM/+FiK8LFjlfoIFewMY3LOIgxa59ISlkk4zlw4ezz1iLY45yQ6ip6WDwky7cx9UruFBAn6iw==",
       "dev": true,
       "peer": true,
       "dependencies": {
@@ -808,6 +869,37 @@
         "@firebase/app-compat": "0.x"
       }
     },
+    "node_modules/@firebase/app-check-compat/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/app-check-compat/node_modules/@firebase/logger": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.1.tgz",
+      "integrity": "sha512-tTIixB5UJbG9ZHSGZSZdX7THr3KWOLrejZ9B7jYsm6fpwgRNngKznQKA2wgYVyvBc1ta7dGFh9NtJ8n7qfiYIw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/app-check-compat/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/@firebase/app-check-interop-types": {
       "version": "0.3.1",
       "resolved": "https://registry.npmjs.org/@firebase/app-check-interop-types/-/app-check-interop-types-0.3.1.tgz",
@@ -822,31 +914,122 @@
       "dev": true,
       "peer": true
     },
+    "node_modules/@firebase/app-check/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/app-check/node_modules/@firebase/logger": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.1.tgz",
+      "integrity": "sha512-tTIixB5UJbG9ZHSGZSZdX7THr3KWOLrejZ9B7jYsm6fpwgRNngKznQKA2wgYVyvBc1ta7dGFh9NtJ8n7qfiYIw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/app-check/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/@firebase/app-compat": {
-      "version": "0.2.32",
-      "resolved": "https://registry.npmjs.org/@firebase/app-compat/-/app-compat-0.2.32.tgz",
-      "integrity": "sha512-xxfAQKwCmpzwwdBHXT1DTnmilwSeSy6Sa1vThL0q0mq5GPHi52onkm5wl1lrOaiP0uQwQutkZBf/Wy4tDW+5WQ==",
+      "version": "0.2.30",
+      "resolved": "https://registry.npmjs.org/@firebase/app-compat/-/app-compat-0.2.30.tgz",
+      "integrity": "sha512-S3FI3yx36xq5NYWXv/rqZiEnkQ89QwfGdl26iWZ9skuOGM96DYQUxs/zs7NkfAQcfpXC8f5DuUrE0Rz/0XdTEg==",
       "dev": true,
       "peer": true,
       "dependencies": {
-        "@firebase/app": "0.10.2",
+        "@firebase/app": "0.10.0",
         "@firebase/component": "0.6.6",
         "@firebase/logger": "0.4.1",
         "@firebase/util": "1.9.5",
         "tslib": "^2.1.0"
       }
     },
+    "node_modules/@firebase/app-compat/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/app-compat/node_modules/@firebase/logger": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.1.tgz",
+      "integrity": "sha512-tTIixB5UJbG9ZHSGZSZdX7THr3KWOLrejZ9B7jYsm6fpwgRNngKznQKA2wgYVyvBc1ta7dGFh9NtJ8n7qfiYIw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/app-compat/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/@firebase/app-types": {
-      "version": "0.9.1",
-      "resolved": "https://registry.npmjs.org/@firebase/app-types/-/app-types-0.9.1.tgz",
-      "integrity": "sha512-nFGqTYsnDFn1oXf1tCwPAc+hQPxyvBT/QB7qDjwK+IDYThOn63nGhzdUTXxVD9Ca8gUY/e5PQMngeo0ZW/E3uQ==",
+      "version": "0.9.0",
+      "resolved": "https://registry.npmjs.org/@firebase/app-types/-/app-types-0.9.0.tgz",
+      "integrity": "sha512-AeweANOIo0Mb8GiYm3xhTEBVCmPwTYAu9Hcd2qSkLuga/6+j9b1Jskl5bpiSQWy9eJ/j5pavxj6eYogmnuzm+Q=="
+    },
+    "node_modules/@firebase/app/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
       "dev": true,
-      "peer": true
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/app/node_modules/@firebase/logger": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.1.tgz",
+      "integrity": "sha512-tTIixB5UJbG9ZHSGZSZdX7THr3KWOLrejZ9B7jYsm6fpwgRNngKznQKA2wgYVyvBc1ta7dGFh9NtJ8n7qfiYIw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/app/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
     },
     "node_modules/@firebase/auth": {
-      "version": "1.7.2",
-      "resolved": "https://registry.npmjs.org/@firebase/auth/-/auth-1.7.2.tgz",
-      "integrity": "sha512-I8rrmhjdSYRokfCdElqm4fjJZdi7hh9NDGhXTRmcxkgUNcWoo82nZ0Ncm66MFlTdeLhNHEPzHqd38Gv6b+zpBg==",
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/@firebase/auth/-/auth-1.7.0.tgz",
+      "integrity": "sha512-xvyCR3Ivan74AwT/rQOqrYkyu4Ccz6GOFaohi1Pw3gLOpG2WIdC/phc4zdQkLJjmbGFcYNisHyqII2P/H9ZJow==",
       "dev": true,
       "peer": true,
       "dependencies": {
@@ -854,7 +1037,7 @@
         "@firebase/logger": "0.4.1",
         "@firebase/util": "1.9.5",
         "tslib": "^2.1.0",
-        "undici": "5.28.4"
+        "undici": "5.28.3"
       },
       "peerDependencies": {
         "@firebase/app": "0.x",
@@ -867,29 +1050,48 @@
       }
     },
     "node_modules/@firebase/auth-compat": {
-      "version": "0.5.7",
-      "resolved": "https://registry.npmjs.org/@firebase/auth-compat/-/auth-compat-0.5.7.tgz",
-      "integrity": "sha512-NcHgTsqrdZxSEElJ+TtUzPT+LELlABVgVpxHEZX1xKY6YG8OIq2PsH5bk/0nzBvYnnYy7bJsKHsiSfS46MbRZA==",
+      "version": "0.5.5",
+      "resolved": "https://registry.npmjs.org/@firebase/auth-compat/-/auth-compat-0.5.5.tgz",
+      "integrity": "sha512-iAq/wCCEX4TPhZeCOmLxscHh6oZtvJ4g/FcRLynFntW3WOtrWF9/91jq+FsDSSJo9Av8MpnayCbbx+jpGSv4DQ==",
       "dev": true,
       "peer": true,
       "dependencies": {
-        "@firebase/auth": "1.7.2",
+        "@firebase/auth": "1.7.0",
         "@firebase/auth-types": "0.12.1",
         "@firebase/component": "0.6.6",
         "@firebase/util": "1.9.5",
         "tslib": "^2.1.0",
-        "undici": "5.28.4"
+        "undici": "5.28.3"
       },
       "peerDependencies": {
         "@firebase/app-compat": "0.x"
       }
     },
-    "node_modules/@firebase/auth-interop-types": {
-      "version": "0.2.2",
-      "resolved": "https://registry.npmjs.org/@firebase/auth-interop-types/-/auth-interop-types-0.2.2.tgz",
-      "integrity": "sha512-k3NA28Jfoo0+o391bFjoV9X5QLnUL1WbLhZZRbTQhZdmdGYJfX8ixtNNlHsYQ94bwG0QRbsmvkzDnzuhHrV11w==",
+    "node_modules/@firebase/auth-compat/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
       "dev": true,
-      "peer": true
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/auth-compat/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/auth-interop-types": {
+      "version": "0.2.1",
+      "resolved": "https://registry.npmjs.org/@firebase/auth-interop-types/-/auth-interop-types-0.2.1.tgz",
+      "integrity": "sha512-VOaGzKp65MY6P5FI84TfYKBXEPi6LmOCSMMzys6o2BN2LOsqy7pCuZCup7NYnfbk5OkkQKzvIfHOzTm0UDpkyg=="
     },
     "node_modules/@firebase/auth-types": {
       "version": "0.12.1",
@@ -902,7 +1104,7 @@
         "@firebase/util": "1.x"
       }
     },
-    "node_modules/@firebase/component": {
+    "node_modules/@firebase/auth/node_modules/@firebase/component": {
       "version": "0.6.6",
       "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
       "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
@@ -913,55 +1115,77 @@
         "tslib": "^2.1.0"
       }
     },
-    "node_modules/@firebase/database": {
-      "version": "1.0.4",
-      "resolved": "https://registry.npmjs.org/@firebase/database/-/database-1.0.4.tgz",
-      "integrity": "sha512-k84cXh+dtpzvY6yOhfyr1B+I1vjvSMtmlqotE0lTNVylc8m5nmOohjzpTLEQDrBWvwACX/VP5fEyajAdmnOKqA==",
+    "node_modules/@firebase/auth/node_modules/@firebase/logger": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.1.tgz",
+      "integrity": "sha512-tTIixB5UJbG9ZHSGZSZdX7THr3KWOLrejZ9B7jYsm6fpwgRNngKznQKA2wgYVyvBc1ta7dGFh9NtJ8n7qfiYIw==",
       "dev": true,
       "peer": true,
       "dependencies": {
-        "@firebase/app-check-interop-types": "0.3.1",
-        "@firebase/auth-interop-types": "0.2.2",
-        "@firebase/component": "0.6.6",
-        "@firebase/logger": "0.4.1",
-        "@firebase/util": "1.9.5",
-        "faye-websocket": "0.11.4",
         "tslib": "^2.1.0"
       }
     },
-    "node_modules/@firebase/database-compat": {
-      "version": "1.0.4",
-      "resolved": "https://registry.npmjs.org/@firebase/database-compat/-/database-compat-1.0.4.tgz",
-      "integrity": "sha512-GEEDAvsSMAkqy0BIFSVtFzoOIIcKHFfDM4aXHtWL/JCaNn4OOjH7td73jDfN3ALvpIN4hQki0FcxQ89XjqaTjQ==",
+    "node_modules/@firebase/auth/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
       "dev": true,
       "peer": true,
       "dependencies": {
-        "@firebase/component": "0.6.6",
-        "@firebase/database": "1.0.4",
-        "@firebase/database-types": "1.0.2",
-        "@firebase/logger": "0.4.1",
-        "@firebase/util": "1.9.5",
         "tslib": "^2.1.0"
       }
     },
-    "node_modules/@firebase/database-types": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/@firebase/database-types/-/database-types-1.0.2.tgz",
-      "integrity": "sha512-JRigr5JNLEHqOkI99tAGHDZF47469/cJz1tRAgGs8Feh+3ZmQy/vVChSqwMp2DuVUGp9PlmGsNSlpINJ/hDuIA==",
-      "dev": true,
-      "peer": true,
+    "node_modules/@firebase/component": {
+      "version": "0.6.4",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.4.tgz",
+      "integrity": "sha512-rLMyrXuO9jcAUCaQXCMjCMUsWrba5fzHlNK24xz5j2W6A/SRmK8mZJ/hn7V0fViLbxC0lPMtrK1eYzk6Fg03jA==",
       "dependencies": {
-        "@firebase/app-types": "0.9.1",
-        "@firebase/util": "1.9.5"
+        "@firebase/util": "1.9.3",
+        "tslib": "^2.1.0"
       }
     },
-    "node_modules/@firebase/firestore": {
-      "version": "4.6.1",
-      "resolved": "https://registry.npmjs.org/@firebase/firestore/-/firestore-4.6.1.tgz",
-      "integrity": "sha512-MaBOBu+QcZOp6SJzCmigiJ4Dt0HNic91w8GghbTE9L//VW/zdO7ezXrcXRK4TjWWOcazBrJZJSHTIsFdwZyvtQ==",
-      "dev": true,
-      "peer": true,
-      "dependencies": {
+    "node_modules/@firebase/database": {
+      "version": "0.14.4",
+      "resolved": "https://registry.npmjs.org/@firebase/database/-/database-0.14.4.tgz",
+      "integrity": "sha512-+Ea/IKGwh42jwdjCyzTmeZeLM3oy1h0mFPsTy6OqCWzcu/KFqRAr5Tt1HRCOBlNOdbh84JPZC47WLU18n2VbxQ==",
+      "dependencies": {
+        "@firebase/auth-interop-types": "0.2.1",
+        "@firebase/component": "0.6.4",
+        "@firebase/logger": "0.4.0",
+        "@firebase/util": "1.9.3",
+        "faye-websocket": "0.11.4",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/database-compat": {
+      "version": "0.3.4",
+      "resolved": "https://registry.npmjs.org/@firebase/database-compat/-/database-compat-0.3.4.tgz",
+      "integrity": "sha512-kuAW+l+sLMUKBThnvxvUZ+Q1ZrF/vFJ58iUY9kAcbX48U03nVzIF6Tmkf0p3WVQwMqiXguSgtOPIB6ZCeF+5Gg==",
+      "dependencies": {
+        "@firebase/component": "0.6.4",
+        "@firebase/database": "0.14.4",
+        "@firebase/database-types": "0.10.4",
+        "@firebase/logger": "0.4.0",
+        "@firebase/util": "1.9.3",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/database-types": {
+      "version": "0.10.4",
+      "resolved": "https://registry.npmjs.org/@firebase/database-types/-/database-types-0.10.4.tgz",
+      "integrity": "sha512-dPySn0vJ/89ZeBac70T+2tWWPiJXWbmRygYv0smT5TfE3hDrQ09eKMF3Y+vMlTdrMWq7mUdYW5REWPSGH4kAZQ==",
+      "dependencies": {
+        "@firebase/app-types": "0.9.0",
+        "@firebase/util": "1.9.3"
+      }
+    },
+    "node_modules/@firebase/firestore": {
+      "version": "4.5.1",
+      "resolved": "https://registry.npmjs.org/@firebase/firestore/-/firestore-4.5.1.tgz",
+      "integrity": "sha512-VQsMKJGuqlx8I+n+NhNrdFRBJU/B1O8mpGIAYABBmVxPyJax/ynuBMJkREmqzRWpbBj5IAtHe+vm4EvJlb6RLg==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
         "@firebase/component": "0.6.6",
         "@firebase/logger": "0.4.1",
         "@firebase/util": "1.9.5",
@@ -969,7 +1193,7 @@
         "@grpc/grpc-js": "~1.9.0",
         "@grpc/proto-loader": "^0.7.8",
         "tslib": "^2.1.0",
-        "undici": "5.28.4"
+        "undici": "5.28.3"
       },
       "engines": {
         "node": ">=10.10.0"
@@ -979,14 +1203,14 @@
       }
     },
     "node_modules/@firebase/firestore-compat": {
-      "version": "0.3.30",
-      "resolved": "https://registry.npmjs.org/@firebase/firestore-compat/-/firestore-compat-0.3.30.tgz",
-      "integrity": "sha512-fnNvNBBdPwziYK01tY1J9zrVYAtGUOsLhpNcU1rpfcklKEUPwXfmiJoFdtNqmgk2x5RjggGpurOPAv6aoEl/PQ==",
+      "version": "0.3.28",
+      "resolved": "https://registry.npmjs.org/@firebase/firestore-compat/-/firestore-compat-0.3.28.tgz",
+      "integrity": "sha512-qaE9QYrWV0K+nh/HWf2EL/V2fPsuTZJ8K4S4e+xUOIxVulmXXwlKg4vgJgRF6r5AlABcSphKNbz/77fChgNwiQ==",
       "dev": true,
       "peer": true,
       "dependencies": {
         "@firebase/component": "0.6.6",
-        "@firebase/firestore": "4.6.1",
+        "@firebase/firestore": "4.5.1",
         "@firebase/firestore-types": "3.0.1",
         "@firebase/util": "1.9.5",
         "tslib": "^2.1.0"
@@ -995,6 +1219,27 @@
         "@firebase/app-compat": "0.x"
       }
     },
+    "node_modules/@firebase/firestore-compat/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/firestore-compat/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/@firebase/firestore-types": {
       "version": "3.0.1",
       "resolved": "https://registry.npmjs.org/@firebase/firestore-types/-/firestore-types-3.0.1.tgz",
@@ -1006,10 +1251,55 @@
         "@firebase/util": "1.x"
       }
     },
+    "node_modules/@firebase/firestore/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/firestore/node_modules/@firebase/logger": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.1.tgz",
+      "integrity": "sha512-tTIixB5UJbG9ZHSGZSZdX7THr3KWOLrejZ9B7jYsm6fpwgRNngKznQKA2wgYVyvBc1ta7dGFh9NtJ8n7qfiYIw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/firestore/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/firestore/node_modules/@grpc/grpc-js": {
+      "version": "1.9.14",
+      "resolved": "https://registry.npmjs.org/@grpc/grpc-js/-/grpc-js-1.9.14.tgz",
+      "integrity": "sha512-nOpuzZ2G3IuMFN+UPPpKrC6NsLmWsTqSsm66IRfnBt1D4pwTqE27lmbpcPM+l2Ua4gE7PfjRHI6uedAy7hoXUw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@grpc/proto-loader": "^0.7.8",
+        "@types/node": ">=12.12.47"
+      },
+      "engines": {
+        "node": "^8.13.0 || >=10.10.0"
+      }
+    },
     "node_modules/@firebase/functions": {
-      "version": "0.11.4",
-      "resolved": "https://registry.npmjs.org/@firebase/functions/-/functions-0.11.4.tgz",
-      "integrity": "sha512-FeMpXtlZG8hnxUauI5J8BSmIbY/Gcv7UVlByxHuHmGxxeS8mJPuAdIxPLUBNtV/naf+MeimIPcpPMslYr6tN6w==",
+      "version": "0.11.3",
+      "resolved": "https://registry.npmjs.org/@firebase/functions/-/functions-0.11.3.tgz",
+      "integrity": "sha512-fpjc3VwxsgFBcR0wmof6kIng7NNvhjqetwWUTMs/ZeOI0QiZoUvSDaudFZvPfvXujSK/sr3tk9G1YzjbwCQkgQ==",
       "dev": true,
       "peer": true,
       "dependencies": {
@@ -1019,21 +1309,21 @@
         "@firebase/messaging-interop-types": "0.2.1",
         "@firebase/util": "1.9.5",
         "tslib": "^2.1.0",
-        "undici": "5.28.4"
+        "undici": "5.28.3"
       },
       "peerDependencies": {
         "@firebase/app": "0.x"
       }
     },
     "node_modules/@firebase/functions-compat": {
-      "version": "0.3.10",
-      "resolved": "https://registry.npmjs.org/@firebase/functions-compat/-/functions-compat-0.3.10.tgz",
-      "integrity": "sha512-2Yidp6Dgf2k8LqJDQUTqdYFdf4ySNmZ71yeDX4lThby1HRMww+Y3nN98YaM6hHarZX3PUfaMUiMBZMHCRRT2IA==",
+      "version": "0.3.9",
+      "resolved": "https://registry.npmjs.org/@firebase/functions-compat/-/functions-compat-0.3.9.tgz",
+      "integrity": "sha512-yVcNBUljBFD6VPeTJcnWBEFZlVICKWuJzJmPuvgKEH++8z/CdgUKw0YslceaPQIWnstdviZDEF1cjJnR/bLvzQ==",
       "dev": true,
       "peer": true,
       "dependencies": {
         "@firebase/component": "0.6.6",
-        "@firebase/functions": "0.11.4",
+        "@firebase/functions": "0.11.3",
         "@firebase/functions-types": "0.6.1",
         "@firebase/util": "1.9.5",
         "tslib": "^2.1.0"
@@ -1042,6 +1332,27 @@
         "@firebase/app-compat": "0.x"
       }
     },
+    "node_modules/@firebase/functions-compat/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/functions-compat/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/@firebase/functions-types": {
       "version": "0.6.1",
       "resolved": "https://registry.npmjs.org/@firebase/functions-types/-/functions-types-0.6.1.tgz",
@@ -1049,6 +1360,34 @@
       "dev": true,
       "peer": true
     },
+    "node_modules/@firebase/functions/node_modules/@firebase/auth-interop-types": {
+      "version": "0.2.2",
+      "resolved": "https://registry.npmjs.org/@firebase/auth-interop-types/-/auth-interop-types-0.2.2.tgz",
+      "integrity": "sha512-k3NA28Jfoo0+o391bFjoV9X5QLnUL1WbLhZZRbTQhZdmdGYJfX8ixtNNlHsYQ94bwG0QRbsmvkzDnzuhHrV11w==",
+      "dev": true,
+      "peer": true
+    },
+    "node_modules/@firebase/functions/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/functions/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/@firebase/installations": {
       "version": "0.6.6",
       "resolved": "https://registry.npmjs.org/@firebase/installations/-/installations-0.6.6.tgz",
@@ -1082,6 +1421,27 @@
         "@firebase/app-compat": "0.x"
       }
     },
+    "node_modules/@firebase/installations-compat/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/installations-compat/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/@firebase/installations-types": {
       "version": "0.5.1",
       "resolved": "https://registry.npmjs.org/@firebase/installations-types/-/installations-types-0.5.1.tgz",
@@ -1092,20 +1452,39 @@
         "@firebase/app-types": "0.x"
       }
     },
-    "node_modules/@firebase/logger": {
-      "version": "0.4.1",
-      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.1.tgz",
-      "integrity": "sha512-tTIixB5UJbG9ZHSGZSZdX7THr3KWOLrejZ9B7jYsm6fpwgRNngKznQKA2wgYVyvBc1ta7dGFh9NtJ8n7qfiYIw==",
+    "node_modules/@firebase/installations/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/installations/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
       "dev": true,
       "peer": true,
       "dependencies": {
         "tslib": "^2.1.0"
       }
     },
+    "node_modules/@firebase/logger": {
+      "version": "0.4.0",
+      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.0.tgz",
+      "integrity": "sha512-eRKSeykumZ5+cJPdxxJRgAC3G5NknY2GwEbKfymdnXtnT0Ucm4pspfR6GT4MUQEDuJwRVbVcSx85kgJulMoFFA==",
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/@firebase/messaging": {
-      "version": "0.12.8",
-      "resolved": "https://registry.npmjs.org/@firebase/messaging/-/messaging-0.12.8.tgz",
-      "integrity": "sha512-FbCTNhv5DUBo8It+Wj3XbKM1xf3PeoHsHk8PjMWBNm0yP+LL8Jhd3ejRsukEYdysTMvgxY4sU5Cs5YNTK44qTQ==",
+      "version": "0.12.7",
+      "resolved": "https://registry.npmjs.org/@firebase/messaging/-/messaging-0.12.7.tgz",
+      "integrity": "sha512-FNZiGMZWjU2D13U/XpoGDSfqCx2kqJ171P3VjquBJfd8SkYNyJMkKM82QvTjQaDd4nuWzgvTDR81DGJFUO6AOg==",
       "dev": true,
       "peer": true,
       "dependencies": {
@@ -1121,14 +1500,14 @@
       }
     },
     "node_modules/@firebase/messaging-compat": {
-      "version": "0.2.8",
-      "resolved": "https://registry.npmjs.org/@firebase/messaging-compat/-/messaging-compat-0.2.8.tgz",
-      "integrity": "sha512-/2ibL9u64jn76g67qjAZutVnPTV6euu0z3BvCjcqlNbMMdtoyNjyHOBRe/D7eVcrRt0uB4rTPnjr3A6sVKdjuA==",
+      "version": "0.2.7",
+      "resolved": "https://registry.npmjs.org/@firebase/messaging-compat/-/messaging-compat-0.2.7.tgz",
+      "integrity": "sha512-29eeNzkjJPNc1RAVmxocaA8PzkbtuNvabX8jKw3N8VdAmyugx7+dYB+jCnereiWqIwivIZ2xSbCUQ24vC7+HaQ==",
       "dev": true,
       "peer": true,
       "dependencies": {
         "@firebase/component": "0.6.6",
-        "@firebase/messaging": "0.12.8",
+        "@firebase/messaging": "0.12.7",
         "@firebase/util": "1.9.5",
         "tslib": "^2.1.0"
       },
@@ -1136,6 +1515,27 @@
         "@firebase/app-compat": "0.x"
       }
     },
+    "node_modules/@firebase/messaging-compat/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/messaging-compat/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/@firebase/messaging-interop-types": {
       "version": "0.2.1",
       "resolved": "https://registry.npmjs.org/@firebase/messaging-interop-types/-/messaging-interop-types-0.2.1.tgz",
@@ -1143,6 +1543,27 @@
       "dev": true,
       "peer": true
     },
+    "node_modules/@firebase/messaging/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/messaging/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/@firebase/performance": {
       "version": "0.6.6",
       "resolved": "https://registry.npmjs.org/@firebase/performance/-/performance-0.6.6.tgz",
@@ -1160,30 +1581,92 @@
         "@firebase/app": "0.x"
       }
     },
-    "node_modules/@firebase/performance-compat": {
-      "version": "0.2.6",
-      "resolved": "https://registry.npmjs.org/@firebase/performance-compat/-/performance-compat-0.2.6.tgz",
-      "integrity": "sha512-JSGdNNHBAMRTocGpN+m+7tk+9rulBcwuG+Ejw/ooDj45FGcON1Eymxh/qbe5M6Dlj5P1ClbkHLj4yf7MiCHOag==",
+    "node_modules/@firebase/performance-compat": {
+      "version": "0.2.6",
+      "resolved": "https://registry.npmjs.org/@firebase/performance-compat/-/performance-compat-0.2.6.tgz",
+      "integrity": "sha512-JSGdNNHBAMRTocGpN+m+7tk+9rulBcwuG+Ejw/ooDj45FGcON1Eymxh/qbe5M6Dlj5P1ClbkHLj4yf7MiCHOag==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/component": "0.6.6",
+        "@firebase/logger": "0.4.1",
+        "@firebase/performance": "0.6.6",
+        "@firebase/performance-types": "0.2.1",
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      },
+      "peerDependencies": {
+        "@firebase/app-compat": "0.x"
+      }
+    },
+    "node_modules/@firebase/performance-compat/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/performance-compat/node_modules/@firebase/logger": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.1.tgz",
+      "integrity": "sha512-tTIixB5UJbG9ZHSGZSZdX7THr3KWOLrejZ9B7jYsm6fpwgRNngKznQKA2wgYVyvBc1ta7dGFh9NtJ8n7qfiYIw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/performance-compat/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/performance-types": {
+      "version": "0.2.1",
+      "resolved": "https://registry.npmjs.org/@firebase/performance-types/-/performance-types-0.2.1.tgz",
+      "integrity": "sha512-kQ8pEr4d6ArhPoYrngcFlEJMNWMdEZTpvMAttWH0C2vegBgj47cm6xXFy9+0j27OBhOIiPn48Z+2WE2XNu33CQ==",
+      "dev": true,
+      "peer": true
+    },
+    "node_modules/@firebase/performance/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/performance/node_modules/@firebase/logger": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.1.tgz",
+      "integrity": "sha512-tTIixB5UJbG9ZHSGZSZdX7THr3KWOLrejZ9B7jYsm6fpwgRNngKznQKA2wgYVyvBc1ta7dGFh9NtJ8n7qfiYIw==",
       "dev": true,
       "peer": true,
       "dependencies": {
-        "@firebase/component": "0.6.6",
-        "@firebase/logger": "0.4.1",
-        "@firebase/performance": "0.6.6",
-        "@firebase/performance-types": "0.2.1",
-        "@firebase/util": "1.9.5",
         "tslib": "^2.1.0"
-      },
-      "peerDependencies": {
-        "@firebase/app-compat": "0.x"
       }
     },
-    "node_modules/@firebase/performance-types": {
-      "version": "0.2.1",
-      "resolved": "https://registry.npmjs.org/@firebase/performance-types/-/performance-types-0.2.1.tgz",
-      "integrity": "sha512-kQ8pEr4d6ArhPoYrngcFlEJMNWMdEZTpvMAttWH0C2vegBgj47cm6xXFy9+0j27OBhOIiPn48Z+2WE2XNu33CQ==",
+    "node_modules/@firebase/performance/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
       "dev": true,
-      "peer": true
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
     },
     "node_modules/@firebase/remote-config": {
       "version": "0.4.6",
@@ -1220,6 +1703,37 @@
         "@firebase/app-compat": "0.x"
       }
     },
+    "node_modules/@firebase/remote-config-compat/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/remote-config-compat/node_modules/@firebase/logger": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.1.tgz",
+      "integrity": "sha512-tTIixB5UJbG9ZHSGZSZdX7THr3KWOLrejZ9B7jYsm6fpwgRNngKznQKA2wgYVyvBc1ta7dGFh9NtJ8n7qfiYIw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/remote-config-compat/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/@firebase/remote-config-types": {
       "version": "0.3.1",
       "resolved": "https://registry.npmjs.org/@firebase/remote-config-types/-/remote-config-types-0.3.1.tgz",
@@ -1227,6 +1741,37 @@
       "dev": true,
       "peer": true
     },
+    "node_modules/@firebase/remote-config/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/remote-config/node_modules/@firebase/logger": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.1.tgz",
+      "integrity": "sha512-tTIixB5UJbG9ZHSGZSZdX7THr3KWOLrejZ9B7jYsm6fpwgRNngKznQKA2wgYVyvBc1ta7dGFh9NtJ8n7qfiYIw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/remote-config/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/@firebase/rules-unit-testing": {
       "version": "3.0.2",
       "resolved": "https://registry.npmjs.org/@firebase/rules-unit-testing/-/rules-unit-testing-3.0.2.tgz",
@@ -1243,31 +1788,51 @@
         "firebase": "^10.0.0"
       }
     },
+    "node_modules/@firebase/rules-unit-testing/node_modules/node-fetch": {
+      "version": "2.6.7",
+      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.7.tgz",
+      "integrity": "sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==",
+      "dev": true,
+      "dependencies": {
+        "whatwg-url": "^5.0.0"
+      },
+      "engines": {
+        "node": "4.x || >=6.0.0"
+      },
+      "peerDependencies": {
+        "encoding": "^0.1.0"
+      },
+      "peerDependenciesMeta": {
+        "encoding": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/@firebase/storage": {
-      "version": "0.12.4",
-      "resolved": "https://registry.npmjs.org/@firebase/storage/-/storage-0.12.4.tgz",
-      "integrity": "sha512-HcmUcp2kSSr5cHkIqFrgUW+i20925EEjkXepQxgBcI2Vx0cyqshr8iETtGow2+cMBFeY8H2swsKKabOKAjIwlQ==",
+      "version": "0.12.3",
+      "resolved": "https://registry.npmjs.org/@firebase/storage/-/storage-0.12.3.tgz",
+      "integrity": "sha512-JP/rN8fb4CgCo7k/I8OLVgRx5cgExsWOIUQ2O2VQwR6YKItuL375c9v7PDaOfEcFZea/fXtfJJ3Z2NaI9445CQ==",
       "dev": true,
       "peer": true,
       "dependencies": {
         "@firebase/component": "0.6.6",
         "@firebase/util": "1.9.5",
         "tslib": "^2.1.0",
-        "undici": "5.28.4"
+        "undici": "5.28.3"
       },
       "peerDependencies": {
         "@firebase/app": "0.x"
       }
     },
     "node_modules/@firebase/storage-compat": {
-      "version": "0.3.7",
-      "resolved": "https://registry.npmjs.org/@firebase/storage-compat/-/storage-compat-0.3.7.tgz",
-      "integrity": "sha512-pTlNAm8/QPN7vhYRyd5thr2ouCykP+wIFXHY1AV42WTrk98sTGdIlt/tusHzmrH4mJ34MPaICS0cn2lYikiq8w==",
+      "version": "0.3.6",
+      "resolved": "https://registry.npmjs.org/@firebase/storage-compat/-/storage-compat-0.3.6.tgz",
+      "integrity": "sha512-AKv0vwktqdW4SDDDcHSN2ahi1Hpjs8rTM6sE7+yrWpm8cRght/PkqylsFnIe+a/toCNd8WeWaXq/oaXHPvRw1w==",
       "dev": true,
       "peer": true,
       "dependencies": {
         "@firebase/component": "0.6.6",
-        "@firebase/storage": "0.12.4",
+        "@firebase/storage": "0.12.3",
         "@firebase/storage-types": "0.8.1",
         "@firebase/util": "1.9.5",
         "tslib": "^2.1.0"
@@ -1276,6 +1841,27 @@
         "@firebase/app-compat": "0.x"
       }
     },
+    "node_modules/@firebase/storage-compat/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/storage-compat/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/@firebase/storage-types": {
       "version": "0.8.1",
       "resolved": "https://registry.npmjs.org/@firebase/storage-types/-/storage-types-0.8.1.tgz",
@@ -1287,7 +1873,18 @@
         "@firebase/util": "1.x"
       }
     },
-    "node_modules/@firebase/util": {
+    "node_modules/@firebase/storage/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/@firebase/storage/node_modules/@firebase/util": {
       "version": "1.9.5",
       "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
       "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
@@ -1297,6 +1894,14 @@
         "tslib": "^2.1.0"
       }
     },
+    "node_modules/@firebase/util": {
+      "version": "1.9.3",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.3.tgz",
+      "integrity": "sha512-DY02CRhOZwpzO36fHpuVysz6JZrscPiBXD0fXp6qSrL9oNOx5KWICKdR95C0lSITzxp0TZosVyHqzatE8JbcjA==",
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/@firebase/webchannel-wrapper": {
       "version": "0.10.6",
       "resolved": "https://registry.npmjs.org/@firebase/webchannel-wrapper/-/webchannel-wrapper-0.10.6.tgz",
@@ -1348,21 +1953,23 @@
       }
     },
     "node_modules/@google-cloud/storage": {
-      "version": "7.10.2",
-      "resolved": "https://registry.npmjs.org/@google-cloud/storage/-/storage-7.10.2.tgz",
-      "integrity": "sha512-NaCyhwu0cSqwj6waZO+8WiyzCXUBUfVE7T1fHAGRHEJ+CRy5on2ah/jfC0ZPYXL0q4JoPj98VtMW4bEgtFfKHw==",
+      "version": "7.9.0",
+      "resolved": "https://registry.npmjs.org/@google-cloud/storage/-/storage-7.9.0.tgz",
+      "integrity": "sha512-PlFl7g3r91NmXtZHXsSEfTZES5ysD3SSBWmX4iBdQ2TFH7tN/Vn/IhnVELCHtgh1vc+uYPZ7XvRYaqtDCdghIA==",
       "dependencies": {
         "@google-cloud/paginator": "^5.0.0",
         "@google-cloud/projectify": "^4.0.0",
         "@google-cloud/promisify": "^4.0.0",
         "abort-controller": "^3.0.0",
         "async-retry": "^1.3.3",
+        "compressible": "^2.0.12",
         "duplexify": "^4.1.3",
         "ent": "^2.2.0",
         "fast-xml-parser": "^4.3.0",
         "gaxios": "^6.0.2",
         "google-auth-library": "^9.6.3",
         "mime": "^3.0.0",
+        "mime-types": "^2.0.8",
         "p-limit": "^3.0.1",
         "retry-request": "^7.0.0",
         "teeny-request": "^9.0.0",
@@ -1381,13 +1988,12 @@
       }
     },
     "node_modules/@grpc/grpc-js": {
-      "version": "1.9.14",
-      "resolved": "https://registry.npmjs.org/@grpc/grpc-js/-/grpc-js-1.9.14.tgz",
-      "integrity": "sha512-nOpuzZ2G3IuMFN+UPPpKrC6NsLmWsTqSsm66IRfnBt1D4pwTqE27lmbpcPM+l2Ua4gE7PfjRHI6uedAy7hoXUw==",
-      "dev": true,
-      "peer": true,
+      "version": "1.8.21",
+      "resolved": "https://registry.npmjs.org/@grpc/grpc-js/-/grpc-js-1.8.21.tgz",
+      "integrity": "sha512-KeyQeZpxeEBSqFVTi3q2K7PiPXmgBfECc4updA1ejCLjYmoAlvvM3ZMp5ztTDUCUQmoY3CpDxvchjO1+rFkoHg==",
+      "optional": true,
       "dependencies": {
-        "@grpc/proto-loader": "^0.7.8",
+        "@grpc/proto-loader": "^0.7.0",
         "@types/node": ">=12.12.47"
       },
       "engines": {
@@ -1880,9 +2486,9 @@
       }
     },
     "node_modules/@jsdoc/salty": {
-      "version": "0.2.8",
-      "resolved": "https://registry.npmjs.org/@jsdoc/salty/-/salty-0.2.8.tgz",
-      "integrity": "sha512-5e+SFVavj1ORKlKaKr2BmTOekmXbelU7dC0cDkQLqag7xfuTPuGMUFx7KWJuv4bYZrTsoL2Z18VVCOKYxzoHcg==",
+      "version": "0.2.7",
+      "resolved": "https://registry.npmjs.org/@jsdoc/salty/-/salty-0.2.7.tgz",
+      "integrity": "sha512-mh8LbS9d4Jq84KLw8pzho7XC2q2/IJGiJss3xwRoLD1A+EE16SjN4PfaG4jRCzKegTFLlN0Zd8SdUPE6XdoPFg==",
       "optional": true,
       "dependencies": {
         "lodash": "^4.17.21"
@@ -2069,14 +2675,13 @@
       }
     },
     "node_modules/@slack/web-api": {
-      "version": "7.0.4",
-      "resolved": "https://registry.npmjs.org/@slack/web-api/-/web-api-7.0.4.tgz",
-      "integrity": "sha512-21tbte7N8itwjG7nsiQbDmXP9T/oqEILuvyL2UtgaZxfSY4a1JWWsLGL5n/hcgS2WE2oxmEHsBuhuRkZDwDovw==",
+      "version": "7.0.2",
+      "resolved": "https://registry.npmjs.org/@slack/web-api/-/web-api-7.0.2.tgz",
+      "integrity": "sha512-nY1KO+7i4iURihThS1kMOElzesx4jqRJtkxLS9FOT8Debh7vQAzzbzxpMB4QauSs15030eyJ16HCf1IfCT4BKQ==",
       "dependencies": {
         "@slack/logger": "^4.0.0",
         "@slack/types": "^2.9.0",
         "@types/node": ">=18.0.0",
-        "@types/retry": "0.12.0",
         "axios": "^1.6.5",
         "eventemitter3": "^5.0.1",
         "form-data": "^4.0.0",
@@ -2205,9 +2810,9 @@
       }
     },
     "node_modules/@types/express-serve-static-core": {
-      "version": "4.19.0",
-      "resolved": "https://registry.npmjs.org/@types/express-serve-static-core/-/express-serve-static-core-4.19.0.tgz",
-      "integrity": "sha512-bGyep3JqPCRry1wq+O5n7oiBgGWmeIJXPjXXCo8EK0u8duZGSYar7cGqd3ML2JUsLGeB7fmc06KYo9fLGWqPvQ==",
+      "version": "4.17.43",
+      "resolved": "https://registry.npmjs.org/@types/express-serve-static-core/-/express-serve-static-core-4.17.43.tgz",
+      "integrity": "sha512-oaYtiBirUOPQGSWNGPWnzyAFJ0BP3cwvN4oWZQY+zUBwpVIGsKUkpBpSztp74drYcjavs7SKFZ4DX1V2QeN8rg==",
       "dependencies": {
         "@types/node": "*",
         "@types/qs": "*",
@@ -2339,9 +2944,9 @@
       "optional": true
     },
     "node_modules/@types/node": {
-      "version": "20.12.7",
-      "resolved": "https://registry.npmjs.org/@types/node/-/node-20.12.7.tgz",
-      "integrity": "sha512-wq0cICSkRLVaf3UGLMGItu/PtdY7oaXaI/RVU+xliKVOtRna3PRY57ZDfztpDL0n11vfymMUnXv8QwYCO7L1wg==",
+      "version": "20.12.3",
+      "resolved": "https://registry.npmjs.org/@types/node/-/node-20.12.3.tgz",
+      "integrity": "sha512-sD+ia2ubTeWrOu+YMF+MTAB7E+O7qsMqAbMfW7DG3K1URwhZ5hN1pLlRVGbf4wDFzSfikL05M17EyorS86jShw==",
       "dependencies": {
         "undici-types": "~5.26.4"
       }
@@ -2371,9 +2976,9 @@
       }
     },
     "node_modules/@types/qs": {
-      "version": "6.9.15",
-      "resolved": "https://registry.npmjs.org/@types/qs/-/qs-6.9.15.tgz",
-      "integrity": "sha512-uXHQKES6DQKKCLh441Xv/dwxOq1TVS3JPUMlEqoEglvlhR6Mxnlew/Xq/LRVHpLyk7iK3zODe1qYHIMltO7XGg=="
+      "version": "6.9.14",
+      "resolved": "https://registry.npmjs.org/@types/qs/-/qs-6.9.14.tgz",
+      "integrity": "sha512-5khscbd3SwWMhFqylJBLQ0zIu7c1K6Vz0uBIt915BI3zV0q1nfjRQD3RqSBcPaO6PHEF4ov/t9y89fSiyThlPA=="
     },
     "node_modules/@types/range-parser": {
       "version": "1.2.7",
@@ -2477,16 +3082,16 @@
       "dev": true
     },
     "node_modules/@typescript-eslint/eslint-plugin": {
-      "version": "7.8.0",
-      "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-7.8.0.tgz",
-      "integrity": "sha512-gFTT+ezJmkwutUPmB0skOj3GZJtlEGnlssems4AjkVweUPGj7jRwwqg0Hhg7++kPGJqKtTYx+R05Ftww372aIg==",
+      "version": "7.6.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-7.6.0.tgz",
+      "integrity": "sha512-gKmTNwZnblUdnTIJu3e9kmeRRzV2j1a/LUO27KNNAnIC5zjy1aSvXSRp4rVNlmAoHlQ7HzX42NbKpcSr4jF80A==",
       "dev": true,
       "dependencies": {
         "@eslint-community/regexpp": "^4.10.0",
-        "@typescript-eslint/scope-manager": "7.8.0",
-        "@typescript-eslint/type-utils": "7.8.0",
-        "@typescript-eslint/utils": "7.8.0",
-        "@typescript-eslint/visitor-keys": "7.8.0",
+        "@typescript-eslint/scope-manager": "7.6.0",
+        "@typescript-eslint/type-utils": "7.6.0",
+        "@typescript-eslint/utils": "7.6.0",
+        "@typescript-eslint/visitor-keys": "7.6.0",
         "debug": "^4.3.4",
         "graphemer": "^1.4.0",
         "ignore": "^5.3.1",
@@ -2512,15 +3117,15 @@
       }
     },
     "node_modules/@typescript-eslint/parser": {
-      "version": "7.8.0",
-      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-7.8.0.tgz",
-      "integrity": "sha512-KgKQly1pv0l4ltcftP59uQZCi4HUYswCLbTqVZEJu7uLX8CTLyswqMLqLN+2QFz4jCptqWVV4SB7vdxcH2+0kQ==",
+      "version": "7.6.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-7.6.0.tgz",
+      "integrity": "sha512-usPMPHcwX3ZoPWnBnhhorc14NJw9J4HpSXQX4urF2TPKG0au0XhJoZyX62fmvdHONUkmyUe74Hzm1//XA+BoYg==",
       "dev": true,
       "dependencies": {
-        "@typescript-eslint/scope-manager": "7.8.0",
-        "@typescript-eslint/types": "7.8.0",
-        "@typescript-eslint/typescript-estree": "7.8.0",
-        "@typescript-eslint/visitor-keys": "7.8.0",
+        "@typescript-eslint/scope-manager": "7.6.0",
+        "@typescript-eslint/types": "7.6.0",
+        "@typescript-eslint/typescript-estree": "7.6.0",
+        "@typescript-eslint/visitor-keys": "7.6.0",
         "debug": "^4.3.4"
       },
       "engines": {
@@ -2540,13 +3145,13 @@
       }
     },
     "node_modules/@typescript-eslint/scope-manager": {
-      "version": "7.8.0",
-      "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-7.8.0.tgz",
-      "integrity": "sha512-viEmZ1LmwsGcnr85gIq+FCYI7nO90DVbE37/ll51hjv9aG+YZMb4WDE2fyWpUR4O/UrhGRpYXK/XajcGTk2B8g==",
+      "version": "7.6.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-7.6.0.tgz",
+      "integrity": "sha512-ngttyfExA5PsHSx0rdFgnADMYQi+Zkeiv4/ZxGYUWd0nLs63Ha0ksmp8VMxAIC0wtCFxMos7Lt3PszJssG/E6w==",
       "dev": true,
       "dependencies": {
-        "@typescript-eslint/types": "7.8.0",
-        "@typescript-eslint/visitor-keys": "7.8.0"
+        "@typescript-eslint/types": "7.6.0",
+        "@typescript-eslint/visitor-keys": "7.6.0"
       },
       "engines": {
         "node": "^18.18.0 || >=20.0.0"
@@ -2557,13 +3162,13 @@
       }
     },
     "node_modules/@typescript-eslint/type-utils": {
-      "version": "7.8.0",
-      "resolved": "https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-7.8.0.tgz",
-      "integrity": "sha512-H70R3AefQDQpz9mGv13Uhi121FNMh+WEaRqcXTX09YEDky21km4dV1ZXJIp8QjXc4ZaVkXVdohvWDzbnbHDS+A==",
+      "version": "7.6.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-7.6.0.tgz",
+      "integrity": "sha512-NxAfqAPNLG6LTmy7uZgpK8KcuiS2NZD/HlThPXQRGwz6u7MDBWRVliEEl1Gj6U7++kVJTpehkhZzCJLMK66Scw==",
       "dev": true,
       "dependencies": {
-        "@typescript-eslint/typescript-estree": "7.8.0",
-        "@typescript-eslint/utils": "7.8.0",
+        "@typescript-eslint/typescript-estree": "7.6.0",
+        "@typescript-eslint/utils": "7.6.0",
         "debug": "^4.3.4",
         "ts-api-utils": "^1.3.0"
       },
@@ -2584,9 +3189,9 @@
       }
     },
     "node_modules/@typescript-eslint/types": {
-      "version": "7.8.0",
-      "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-7.8.0.tgz",
-      "integrity": "sha512-wf0peJ+ZGlcH+2ZS23aJbOv+ztjeeP8uQ9GgwMJGVLx/Nj9CJt17GWgWWoSmoRVKAX2X+7fzEnAjxdvK2gqCLw==",
+      "version": "7.6.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-7.6.0.tgz",
+      "integrity": "sha512-h02rYQn8J+MureCvHVVzhl69/GAfQGPQZmOMjG1KfCl7o3HtMSlPaPUAPu6lLctXI5ySRGIYk94clD/AUMCUgQ==",
       "dev": true,
       "engines": {
         "node": "^18.18.0 || >=20.0.0"
@@ -2597,13 +3202,13 @@
       }
     },
     "node_modules/@typescript-eslint/typescript-estree": {
-      "version": "7.8.0",
-      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-7.8.0.tgz",
-      "integrity": "sha512-5pfUCOwK5yjPaJQNy44prjCwtr981dO8Qo9J9PwYXZ0MosgAbfEMB008dJ5sNo3+/BN6ytBPuSvXUg9SAqB0dg==",
+      "version": "7.6.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-7.6.0.tgz",
+      "integrity": "sha512-+7Y/GP9VuYibecrCQWSKgl3GvUM5cILRttpWtnAu8GNL9j11e4tbuGZmZjJ8ejnKYyBRb2ddGQ3rEFCq3QjMJw==",
       "dev": true,
       "dependencies": {
-        "@typescript-eslint/types": "7.8.0",
-        "@typescript-eslint/visitor-keys": "7.8.0",
+        "@typescript-eslint/types": "7.6.0",
+        "@typescript-eslint/visitor-keys": "7.6.0",
         "debug": "^4.3.4",
         "globby": "^11.1.0",
         "is-glob": "^4.0.3",
@@ -2625,17 +3230,17 @@
       }
     },
     "node_modules/@typescript-eslint/utils": {
-      "version": "7.8.0",
-      "resolved": "https://registry.npmjs.org/@typescript-eslint/utils/-/utils-7.8.0.tgz",
-      "integrity": "sha512-L0yFqOCflVqXxiZyXrDr80lnahQfSOfc9ELAAZ75sqicqp2i36kEZZGuUymHNFoYOqxRT05up760b4iGsl02nQ==",
+      "version": "7.6.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/utils/-/utils-7.6.0.tgz",
+      "integrity": "sha512-x54gaSsRRI+Nwz59TXpCsr6harB98qjXYzsRxGqvA5Ue3kQH+FxS7FYU81g/omn22ML2pZJkisy6Q+ElK8pBCA==",
       "dev": true,
       "dependencies": {
         "@eslint-community/eslint-utils": "^4.4.0",
         "@types/json-schema": "^7.0.15",
         "@types/semver": "^7.5.8",
-        "@typescript-eslint/scope-manager": "7.8.0",
-        "@typescript-eslint/types": "7.8.0",
-        "@typescript-eslint/typescript-estree": "7.8.0",
+        "@typescript-eslint/scope-manager": "7.6.0",
+        "@typescript-eslint/types": "7.6.0",
+        "@typescript-eslint/typescript-estree": "7.6.0",
         "semver": "^7.6.0"
       },
       "engines": {
@@ -2650,12 +3255,12 @@
       }
     },
     "node_modules/@typescript-eslint/visitor-keys": {
-      "version": "7.8.0",
-      "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-7.8.0.tgz",
-      "integrity": "sha512-q4/gibTNBQNA0lGyYQCmWRS5D15n8rXh4QjK3KV+MBPlTYHpfBUT3D3PaPR/HeNiI9W6R7FvlkcGhNyAoP+caA==",
+      "version": "7.6.0",
+      "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-7.6.0.tgz",
+      "integrity": "sha512-4eLB7t+LlNUmXzfOu1VAIAdkjbu5xNSerURS9X/S5TUKWFRpXRQZbmtPqgKmYx8bj3J0irtQXSiWAOY82v+cgw==",
       "dev": true,
       "dependencies": {
-        "@typescript-eslint/types": "7.8.0",
+        "@typescript-eslint/types": "7.6.0",
         "eslint-visitor-keys": "^3.4.3"
       },
       "engines": {
@@ -3350,9 +3955,9 @@
       }
     },
     "node_modules/caniuse-lite": {
-      "version": "1.0.30001614",
-      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001614.tgz",
-      "integrity": "sha512-jmZQ1VpmlRwHgdP1/uiKzgiAuGOfLEJsYFP4+GBou/QQ4U6IOJCB4NP1c+1p9RGLpwObcT94jA5/uO+F1vBbog==",
+      "version": "1.0.30001605",
+      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001605.tgz",
+      "integrity": "sha512-nXwGlFWo34uliI9z3n6Qc0wZaf7zaZWA1CPZ169La5mV3I/gem7bst0vr5XQH5TJXZIMfDeZyOrZnSlVzKxxHQ==",
       "dev": true,
       "funding": [
         {
@@ -3461,9 +4066,9 @@
       }
     },
     "node_modules/cjs-module-lexer": {
-      "version": "1.3.1",
-      "resolved": "https://registry.npmjs.org/cjs-module-lexer/-/cjs-module-lexer-1.3.1.tgz",
-      "integrity": "sha512-a3KdPAANPbNE4ZUv9h6LckSl9zLsYOP4MBmhIPkRaeyybt+r4UghLvq+xw/YwUcC1gqylCkL4rdVs3Lwupjm4Q==",
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/cjs-module-lexer/-/cjs-module-lexer-1.2.3.tgz",
+      "integrity": "sha512-0TNiGstbQmCFwt4akjjBg5pLRTSyj/PkWQ1ZoO2zntmg9yLqSRxwEa4iCfQLGjqhiqBfOJa7W/E8wfGrTDmlZQ==",
       "dev": true
     },
     "node_modules/cliui": {
@@ -3529,7 +4134,6 @@
       "version": "2.0.18",
       "resolved": "https://registry.npmjs.org/compressible/-/compressible-2.0.18.tgz",
       "integrity": "sha512-AF3r7P5dWxL8MxyITRMlORQNaOA2IkAFaTr4k7BUumjPtRpGDTZpl0Pb1XCO6JeDCBdp126Cgs9sMxqSjgYyRg==",
-      "optional": true,
       "dependencies": {
         "mime-db": ">= 1.43.0 < 2"
       },
@@ -3708,9 +4312,9 @@
       }
     },
     "node_modules/dedent": {
-      "version": "1.5.3",
-      "resolved": "https://registry.npmjs.org/dedent/-/dedent-1.5.3.tgz",
-      "integrity": "sha512-NHQtfOOW68WD8lgypbLA5oT+Bt0xXJhiYvoR6SmmNXZfpzOGXwdKWmcwG8N7PwVVWV3eF/68nmD9BaJSsTBhyQ==",
+      "version": "1.5.1",
+      "resolved": "https://registry.npmjs.org/dedent/-/dedent-1.5.1.tgz",
+      "integrity": "sha512-+LxW+KLWxu3HW3M2w2ympwtqPrqYRzU8fqi6Fhd18fBALe15blJPI/I4+UHveMVG6lJqB4JNd4UG0S5cnVHwIg==",
       "dev": true,
       "peerDependencies": {
         "babel-plugin-macros": "^3.1.0"
@@ -3803,9 +4407,9 @@
       }
     },
     "node_modules/diff": {
-      "version": "5.0.0",
-      "resolved": "https://registry.npmjs.org/diff/-/diff-5.0.0.tgz",
-      "integrity": "sha512-/VTCrvm5Z0JGty/BWHljh+BAiw3IK+2j87NGMu8Nwc/f48WoDAC395uomO9ZD117ZOBaHmkX1oyLvkVM/aIT3w==",
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
+      "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",
       "dev": true,
       "engines": {
         "node": ">=0.3.1"
@@ -3869,9 +4473,9 @@
       "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow=="
     },
     "node_modules/electron-to-chromium": {
-      "version": "1.4.752",
-      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.752.tgz",
-      "integrity": "sha512-P3QJreYI/AUTcfBVrC4zy9KvnZWekViThgQMX/VpJ+IsOBbcX5JFpORM4qWapwWQ+agb2nYAOyn/4PMXOk0m2Q==",
+      "version": "1.4.724",
+      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.724.tgz",
+      "integrity": "sha512-RTRvkmRkGhNBPPpdrgtDKvmOEYTrPlXDfc0J/Nfq5s29tEahAwhiX4mmhNzj6febWMleulxVYPh7QwCSL/EldA==",
       "dev": true
     },
     "node_modules/emittery": {
@@ -4765,130 +5369,60 @@
       }
     },
     "node_modules/firebase": {
-      "version": "10.11.1",
-      "resolved": "https://registry.npmjs.org/firebase/-/firebase-10.11.1.tgz",
-      "integrity": "sha512-7T6FJJb4PBi6IYR1212/a0djjal6nGph9AQazobWaO75+4zeyEvBDlsofWLEawVAEN2PCp8qXvFe4pMdIB5U1w==",
+      "version": "10.10.0",
+      "resolved": "https://registry.npmjs.org/firebase/-/firebase-10.10.0.tgz",
+      "integrity": "sha512-iJxnCKsBTYa4BSv8cscNbwciX42BvwoePTHg7iwWevb+GyVcZFmKi9eSkg/L7Jpu9mvAFv1jdDGbIaG3xRrE+w==",
       "dev": true,
       "peer": true,
       "dependencies": {
         "@firebase/analytics": "0.10.2",
         "@firebase/analytics-compat": "0.2.8",
-        "@firebase/app": "0.10.2",
+        "@firebase/app": "0.10.0",
         "@firebase/app-check": "0.8.3",
         "@firebase/app-check-compat": "0.3.10",
-        "@firebase/app-compat": "0.2.32",
+        "@firebase/app-compat": "0.2.30",
         "@firebase/app-types": "0.9.1",
-        "@firebase/auth": "1.7.2",
-        "@firebase/auth-compat": "0.5.7",
+        "@firebase/auth": "1.7.0",
+        "@firebase/auth-compat": "0.5.5",
         "@firebase/database": "1.0.4",
         "@firebase/database-compat": "1.0.4",
-        "@firebase/firestore": "4.6.1",
-        "@firebase/firestore-compat": "0.3.30",
-        "@firebase/functions": "0.11.4",
-        "@firebase/functions-compat": "0.3.10",
+        "@firebase/firestore": "4.5.1",
+        "@firebase/firestore-compat": "0.3.28",
+        "@firebase/functions": "0.11.3",
+        "@firebase/functions-compat": "0.3.9",
         "@firebase/installations": "0.6.6",
         "@firebase/installations-compat": "0.2.6",
-        "@firebase/messaging": "0.12.8",
-        "@firebase/messaging-compat": "0.2.8",
+        "@firebase/messaging": "0.12.7",
+        "@firebase/messaging-compat": "0.2.7",
         "@firebase/performance": "0.6.6",
         "@firebase/performance-compat": "0.2.6",
         "@firebase/remote-config": "0.4.6",
         "@firebase/remote-config-compat": "0.2.6",
-        "@firebase/storage": "0.12.4",
-        "@firebase/storage-compat": "0.3.7",
+        "@firebase/storage": "0.12.3",
+        "@firebase/storage-compat": "0.3.6",
         "@firebase/util": "1.9.5"
       }
-    },
-    "node_modules/firebase-admin": {
-      "version": "11.11.1",
-      "resolved": "https://registry.npmjs.org/firebase-admin/-/firebase-admin-11.11.1.tgz",
-      "integrity": "sha512-UyEbq+3u6jWzCYbUntv/HuJiTixwh36G1R9j0v71mSvGAx/YZEWEW7uSGLYxBYE6ckVRQoKMr40PYUEzrm/4dg==",
-      "dependencies": {
-        "@fastify/busboy": "^1.2.1",
-        "@firebase/database-compat": "^0.3.4",
-        "@firebase/database-types": "^0.10.4",
-        "@types/node": ">=12.12.47",
-        "jsonwebtoken": "^9.0.0",
-        "jwks-rsa": "^3.0.1",
-        "node-forge": "^1.3.1",
-        "uuid": "^9.0.0"
-      },
-      "engines": {
-        "node": ">=14"
-      },
-      "optionalDependencies": {
-        "@google-cloud/firestore": "^6.8.0",
-        "@google-cloud/storage": "^6.9.5"
-      }
-    },
-    "node_modules/firebase-admin/node_modules/@firebase/app-types": {
-      "version": "0.9.0",
-      "resolved": "https://registry.npmjs.org/@firebase/app-types/-/app-types-0.9.0.tgz",
-      "integrity": "sha512-AeweANOIo0Mb8GiYm3xhTEBVCmPwTYAu9Hcd2qSkLuga/6+j9b1Jskl5bpiSQWy9eJ/j5pavxj6eYogmnuzm+Q=="
-    },
-    "node_modules/firebase-admin/node_modules/@firebase/auth-interop-types": {
-      "version": "0.2.1",
-      "resolved": "https://registry.npmjs.org/@firebase/auth-interop-types/-/auth-interop-types-0.2.1.tgz",
-      "integrity": "sha512-VOaGzKp65MY6P5FI84TfYKBXEPi6LmOCSMMzys6o2BN2LOsqy7pCuZCup7NYnfbk5OkkQKzvIfHOzTm0UDpkyg=="
-    },
-    "node_modules/firebase-admin/node_modules/@firebase/component": {
-      "version": "0.6.4",
-      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.4.tgz",
-      "integrity": "sha512-rLMyrXuO9jcAUCaQXCMjCMUsWrba5fzHlNK24xz5j2W6A/SRmK8mZJ/hn7V0fViLbxC0lPMtrK1eYzk6Fg03jA==",
-      "dependencies": {
-        "@firebase/util": "1.9.3",
-        "tslib": "^2.1.0"
-      }
-    },
-    "node_modules/firebase-admin/node_modules/@firebase/database": {
-      "version": "0.14.4",
-      "resolved": "https://registry.npmjs.org/@firebase/database/-/database-0.14.4.tgz",
-      "integrity": "sha512-+Ea/IKGwh42jwdjCyzTmeZeLM3oy1h0mFPsTy6OqCWzcu/KFqRAr5Tt1HRCOBlNOdbh84JPZC47WLU18n2VbxQ==",
-      "dependencies": {
-        "@firebase/auth-interop-types": "0.2.1",
-        "@firebase/component": "0.6.4",
-        "@firebase/logger": "0.4.0",
-        "@firebase/util": "1.9.3",
-        "faye-websocket": "0.11.4",
-        "tslib": "^2.1.0"
-      }
-    },
-    "node_modules/firebase-admin/node_modules/@firebase/database-compat": {
-      "version": "0.3.4",
-      "resolved": "https://registry.npmjs.org/@firebase/database-compat/-/database-compat-0.3.4.tgz",
-      "integrity": "sha512-kuAW+l+sLMUKBThnvxvUZ+Q1ZrF/vFJ58iUY9kAcbX48U03nVzIF6Tmkf0p3WVQwMqiXguSgtOPIB6ZCeF+5Gg==",
-      "dependencies": {
-        "@firebase/component": "0.6.4",
-        "@firebase/database": "0.14.4",
-        "@firebase/database-types": "0.10.4",
-        "@firebase/logger": "0.4.0",
-        "@firebase/util": "1.9.3",
-        "tslib": "^2.1.0"
-      }
-    },
-    "node_modules/firebase-admin/node_modules/@firebase/database-types": {
-      "version": "0.10.4",
-      "resolved": "https://registry.npmjs.org/@firebase/database-types/-/database-types-0.10.4.tgz",
-      "integrity": "sha512-dPySn0vJ/89ZeBac70T+2tWWPiJXWbmRygYv0smT5TfE3hDrQ09eKMF3Y+vMlTdrMWq7mUdYW5REWPSGH4kAZQ==",
-      "dependencies": {
-        "@firebase/app-types": "0.9.0",
-        "@firebase/util": "1.9.3"
-      }
-    },
-    "node_modules/firebase-admin/node_modules/@firebase/logger": {
-      "version": "0.4.0",
-      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.0.tgz",
-      "integrity": "sha512-eRKSeykumZ5+cJPdxxJRgAC3G5NknY2GwEbKfymdnXtnT0Ucm4pspfR6GT4MUQEDuJwRVbVcSx85kgJulMoFFA==",
-      "dependencies": {
-        "tslib": "^2.1.0"
-      }
-    },
-    "node_modules/firebase-admin/node_modules/@firebase/util": {
-      "version": "1.9.3",
-      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.3.tgz",
-      "integrity": "sha512-DY02CRhOZwpzO36fHpuVysz6JZrscPiBXD0fXp6qSrL9oNOx5KWICKdR95C0lSITzxp0TZosVyHqzatE8JbcjA==",
+    },
+    "node_modules/firebase-admin": {
+      "version": "11.11.1",
+      "resolved": "https://registry.npmjs.org/firebase-admin/-/firebase-admin-11.11.1.tgz",
+      "integrity": "sha512-UyEbq+3u6jWzCYbUntv/HuJiTixwh36G1R9j0v71mSvGAx/YZEWEW7uSGLYxBYE6ckVRQoKMr40PYUEzrm/4dg==",
       "dependencies": {
-        "tslib": "^2.1.0"
+        "@fastify/busboy": "^1.2.1",
+        "@firebase/database-compat": "^0.3.4",
+        "@firebase/database-types": "^0.10.4",
+        "@types/node": ">=12.12.47",
+        "jsonwebtoken": "^9.0.0",
+        "jwks-rsa": "^3.0.1",
+        "node-forge": "^1.3.1",
+        "uuid": "^9.0.0"
+      },
+      "engines": {
+        "node": ">=14"
+      },
+      "optionalDependencies": {
+        "@google-cloud/firestore": "^6.8.0",
+        "@google-cloud/storage": "^6.9.5"
       }
     },
     "node_modules/firebase-admin/node_modules/@google-cloud/paginator": {
@@ -5059,26 +5593,6 @@
         "node": ">=10"
       }
     },
-    "node_modules/firebase-admin/node_modules/node-fetch": {
-      "version": "2.7.0",
-      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
-      "integrity": "sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==",
-      "optional": true,
-      "dependencies": {
-        "whatwg-url": "^5.0.0"
-      },
-      "engines": {
-        "node": "4.x || >=6.0.0"
-      },
-      "peerDependencies": {
-        "encoding": "^0.1.0"
-      },
-      "peerDependenciesMeta": {
-        "encoding": {
-          "optional": true
-        }
-      }
-    },
     "node_modules/firebase-admin/node_modules/retry-request": {
       "version": "5.0.2",
       "resolved": "https://registry.npmjs.org/retry-request/-/retry-request-5.0.2.tgz",
@@ -5136,9 +5650,9 @@
       }
     },
     "node_modules/firebase-functions-test": {
-      "version": "3.2.0",
-      "resolved": "https://registry.npmjs.org/firebase-functions-test/-/firebase-functions-test-3.2.0.tgz",
-      "integrity": "sha512-UkOPIJH4I4qUGGSr4vaBcbAqn+YblVtMqRI2KQMW2nhMw5So91Iw1klu5Epk8vhEOhn1LPG5/tMaBI1MAtOt6Q==",
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/firebase-functions-test/-/firebase-functions-test-3.1.1.tgz",
+      "integrity": "sha512-IlDzcd+8rUd87hD1ZAPXsc3cX5JGdfpKmKlUJWdZJlErdyznwXssPQzbRPX8rh929ZhwmzGpubFBt7itkXAg+A==",
       "dev": true,
       "dependencies": {
         "@types/lodash": "^4.14.104",
@@ -5150,10 +5664,97 @@
       },
       "peerDependencies": {
         "firebase-admin": "^8.0.0 || ^9.0.0 || ^10.0.0 || ^11.0.0 || ^12.0.0",
-        "firebase-functions": ">=4.9.0",
+        "firebase-functions": ">=4.3.0",
         "jest": ">=28.0.0"
       }
     },
+    "node_modules/firebase/node_modules/@firebase/app-types": {
+      "version": "0.9.1",
+      "resolved": "https://registry.npmjs.org/@firebase/app-types/-/app-types-0.9.1.tgz",
+      "integrity": "sha512-nFGqTYsnDFn1oXf1tCwPAc+hQPxyvBT/QB7qDjwK+IDYThOn63nGhzdUTXxVD9Ca8gUY/e5PQMngeo0ZW/E3uQ==",
+      "dev": true,
+      "peer": true
+    },
+    "node_modules/firebase/node_modules/@firebase/auth-interop-types": {
+      "version": "0.2.2",
+      "resolved": "https://registry.npmjs.org/@firebase/auth-interop-types/-/auth-interop-types-0.2.2.tgz",
+      "integrity": "sha512-k3NA28Jfoo0+o391bFjoV9X5QLnUL1WbLhZZRbTQhZdmdGYJfX8ixtNNlHsYQ94bwG0QRbsmvkzDnzuhHrV11w==",
+      "dev": true,
+      "peer": true
+    },
+    "node_modules/firebase/node_modules/@firebase/component": {
+      "version": "0.6.6",
+      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.6.tgz",
+      "integrity": "sha512-pp7sWqHmAAlA3os6ERgoM3k5Cxff510M9RLXZ9Mc8KFKMBc2ct3RkZTWUF7ixJNvMiK/iNgRLPDrLR2gtRJ9iQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/firebase/node_modules/@firebase/database": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/@firebase/database/-/database-1.0.4.tgz",
+      "integrity": "sha512-k84cXh+dtpzvY6yOhfyr1B+I1vjvSMtmlqotE0lTNVylc8m5nmOohjzpTLEQDrBWvwACX/VP5fEyajAdmnOKqA==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/app-check-interop-types": "0.3.1",
+        "@firebase/auth-interop-types": "0.2.2",
+        "@firebase/component": "0.6.6",
+        "@firebase/logger": "0.4.1",
+        "@firebase/util": "1.9.5",
+        "faye-websocket": "0.11.4",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/firebase/node_modules/@firebase/database-compat": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/@firebase/database-compat/-/database-compat-1.0.4.tgz",
+      "integrity": "sha512-GEEDAvsSMAkqy0BIFSVtFzoOIIcKHFfDM4aXHtWL/JCaNn4OOjH7td73jDfN3ALvpIN4hQki0FcxQ89XjqaTjQ==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/component": "0.6.6",
+        "@firebase/database": "1.0.4",
+        "@firebase/database-types": "1.0.2",
+        "@firebase/logger": "0.4.1",
+        "@firebase/util": "1.9.5",
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/firebase/node_modules/@firebase/database-types": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/@firebase/database-types/-/database-types-1.0.2.tgz",
+      "integrity": "sha512-JRigr5JNLEHqOkI99tAGHDZF47469/cJz1tRAgGs8Feh+3ZmQy/vVChSqwMp2DuVUGp9PlmGsNSlpINJ/hDuIA==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@firebase/app-types": "0.9.1",
+        "@firebase/util": "1.9.5"
+      }
+    },
+    "node_modules/firebase/node_modules/@firebase/logger": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.1.tgz",
+      "integrity": "sha512-tTIixB5UJbG9ZHSGZSZdX7THr3KWOLrejZ9B7jYsm6fpwgRNngKznQKA2wgYVyvBc1ta7dGFh9NtJ8n7qfiYIw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
+    "node_modules/firebase/node_modules/@firebase/util": {
+      "version": "1.9.5",
+      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.9.5.tgz",
+      "integrity": "sha512-PP4pAFISDxsf70l3pEy34Mf3GkkUcVQ3MdKp6aSVb7tcpfUQxnsdV7twDd8EkfB6zZylH6wpUAoangQDmCUMqw==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "tslib": "^2.1.0"
+      }
+    },
     "node_modules/flat": {
       "version": "5.0.2",
       "resolved": "https://registry.npmjs.org/flat/-/flat-5.0.2.tgz",
@@ -5302,39 +5903,19 @@
       }
     },
     "node_modules/gaxios": {
-      "version": "6.5.0",
-      "resolved": "https://registry.npmjs.org/gaxios/-/gaxios-6.5.0.tgz",
-      "integrity": "sha512-R9QGdv8j4/dlNoQbX3hSaK/S0rkMijqjVvW3YM06CoBdbU/VdKd159j4hePpng0KuE6Lh6JJ7UdmVGJZFcAG1w==",
+      "version": "6.3.0",
+      "resolved": "https://registry.npmjs.org/gaxios/-/gaxios-6.3.0.tgz",
+      "integrity": "sha512-p+ggrQw3fBwH2F5N/PAI4k/G/y1art5OxKpb2J2chwNNHM4hHuAOtivjPuirMF4KNKwTTUal/lPfL2+7h2mEcg==",
       "dependencies": {
         "extend": "^3.0.2",
         "https-proxy-agent": "^7.0.1",
         "is-stream": "^2.0.0",
-        "node-fetch": "^2.6.9",
-        "uuid": "^9.0.1"
+        "node-fetch": "^2.6.9"
       },
       "engines": {
         "node": ">=14"
       }
     },
-    "node_modules/gaxios/node_modules/node-fetch": {
-      "version": "2.7.0",
-      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
-      "integrity": "sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==",
-      "dependencies": {
-        "whatwg-url": "^5.0.0"
-      },
-      "engines": {
-        "node": "4.x || >=6.0.0"
-      },
-      "peerDependencies": {
-        "encoding": "^0.1.0"
-      },
-      "peerDependenciesMeta": {
-        "encoding": {
-          "optional": true
-        }
-      }
-    },
     "node_modules/gcp-metadata": {
       "version": "6.1.0",
       "resolved": "https://registry.npmjs.org/gcp-metadata/-/gcp-metadata-6.1.0.tgz",
@@ -5468,13 +6049,12 @@
       }
     },
     "node_modules/globalthis": {
-      "version": "1.0.4",
-      "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz",
-      "integrity": "sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==",
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.3.tgz",
+      "integrity": "sha512-sFdI5LyBiNTHjRd7cGPWapiHWMOXKyuBNX/cWJ3NfzrZQVa8GI/8cofCl74AOVqq9W5kNmguTIzJ/1s2gyI9wA==",
       "dev": true,
       "dependencies": {
-        "define-properties": "^1.2.1",
-        "gopd": "^1.0.1"
+        "define-properties": "^1.1.3"
       },
       "engines": {
         "node": ">= 0.4"
@@ -5504,9 +6084,9 @@
       }
     },
     "node_modules/google-auth-library": {
-      "version": "9.9.0",
-      "resolved": "https://registry.npmjs.org/google-auth-library/-/google-auth-library-9.9.0.tgz",
-      "integrity": "sha512-9l+zO07h1tDJdIHN74SpnWIlNR+OuOemXlWJlLP9pXy6vFtizgpEzMuwJa4lqY9UAdiAv5DVd5ql0Am916I+aA==",
+      "version": "9.7.0",
+      "resolved": "https://registry.npmjs.org/google-auth-library/-/google-auth-library-9.7.0.tgz",
+      "integrity": "sha512-I/AvzBiUXDzLOy4iIZ2W+Zq33W4lcukQv1nl7C8WUA6SQwyQwUwu3waNmWNAvzds//FG8SZ+DnKnW/2k6mQS8A==",
       "dependencies": {
         "base64-js": "^1.3.0",
         "ecdsa-sig-formatter": "^1.0.11",
@@ -5549,19 +6129,6 @@
         "node": ">=12"
       }
     },
-    "node_modules/google-gax/node_modules/@grpc/grpc-js": {
-      "version": "1.8.21",
-      "resolved": "https://registry.npmjs.org/@grpc/grpc-js/-/grpc-js-1.8.21.tgz",
-      "integrity": "sha512-KeyQeZpxeEBSqFVTi3q2K7PiPXmgBfECc4updA1ejCLjYmoAlvvM3ZMp5ztTDUCUQmoY3CpDxvchjO1+rFkoHg==",
-      "optional": true,
-      "dependencies": {
-        "@grpc/proto-loader": "^0.7.0",
-        "@types/node": ">=12.12.47"
-      },
-      "engines": {
-        "node": "^8.13.0 || >=10.10.0"
-      }
-    },
     "node_modules/google-gax/node_modules/agent-base": {
       "version": "6.0.2",
       "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
@@ -5661,26 +6228,6 @@
         "node": ">=10"
       }
     },
-    "node_modules/google-gax/node_modules/node-fetch": {
-      "version": "2.7.0",
-      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
-      "integrity": "sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==",
-      "optional": true,
-      "dependencies": {
-        "whatwg-url": "^5.0.0"
-      },
-      "engines": {
-        "node": "4.x || >=6.0.0"
-      },
-      "peerDependencies": {
-        "encoding": "^0.1.0"
-      },
-      "peerDependenciesMeta": {
-        "encoding": {
-          "optional": true
-        }
-      }
-    },
     "node_modules/google-gax/node_modules/protobufjs": {
       "version": "7.2.4",
       "resolved": "https://registry.npmjs.org/protobufjs/-/protobufjs-7.2.4.tgz",
@@ -7660,6 +8207,15 @@
         "wrap-ansi": "^7.0.0"
       }
     },
+    "node_modules/mocha/node_modules/diff": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/diff/-/diff-5.0.0.tgz",
+      "integrity": "sha512-/VTCrvm5Z0JGty/BWHljh+BAiw3IK+2j87NGMu8Nwc/f48WoDAC395uomO9ZD117ZOBaHmkX1oyLvkVM/aIT3w==",
+      "dev": true,
+      "engines": {
+        "node": ">=0.3.1"
+      }
+    },
     "node_modules/mocha/node_modules/ms": {
       "version": "2.1.3",
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
@@ -7699,6 +8255,15 @@
         "node": ">=10"
       }
     },
+    "node_modules/mocha/node_modules/yargs-parser": {
+      "version": "20.2.4",
+      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.4.tgz",
+      "integrity": "sha512-WOkpgNhPTlE73h4VFAFsOnomJVaovO8VqLDzy5saChRBFQFBoMYirowyW+Q9HB4HFF4Z7VZTiG3iSzJJA29yRA==",
+      "dev": true,
+      "engines": {
+        "node": ">=10"
+      }
+    },
     "node_modules/ms": {
       "version": "2.1.2",
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
@@ -7719,11 +8284,11 @@
       }
     },
     "node_modules/nlpcloud": {
-      "version": "2.0.5",
-      "resolved": "https://registry.npmjs.org/nlpcloud/-/nlpcloud-2.0.5.tgz",
-      "integrity": "sha512-KfWsECCLjZPxGlB9RIdsh+ehChuzCjN5vPXw6d7U9DBl5HwNcDwVO29RWg87hbhvR9lj1+1MjTbvS2yJrbiJBA==",
+      "version": "1.0.48",
+      "resolved": "https://registry.npmjs.org/nlpcloud/-/nlpcloud-1.0.48.tgz",
+      "integrity": "sha512-PVYLy2CB4o1yT8scT76WrQCZ5yoXgHPj6YDNrksfuhG08MVuBzk+6eLVCIX10Moys8hcTontyHbdll4qsMORHQ==",
       "dependencies": {
-        "axios": "^0.21.4"
+        "axios": "^0.21.1"
       }
     },
     "node_modules/nlpcloud/node_modules/axios": {
@@ -7735,10 +8300,9 @@
       }
     },
     "node_modules/node-fetch": {
-      "version": "2.6.7",
-      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.7.tgz",
-      "integrity": "sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==",
-      "dev": true,
+      "version": "2.7.0",
+      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
+      "integrity": "sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==",
       "dependencies": {
         "whatwg-url": "^5.0.0"
       },
@@ -7931,17 +8495,17 @@
       }
     },
     "node_modules/optionator": {
-      "version": "0.9.4",
-      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
-      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
+      "version": "0.9.3",
+      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.3.tgz",
+      "integrity": "sha512-JjCoypp+jKn1ttEFExxhetCKeJt9zhAgAve5FXHixTvFDW/5aEktX9bufBKLRRMdU7bNtpLfcGu94B3cdEJgjg==",
       "dev": true,
       "dependencies": {
+        "@aashutoshrathi/word-wrap": "^1.2.3",
         "deep-is": "^0.1.3",
         "fast-levenshtein": "^2.0.6",
         "levn": "^0.4.1",
         "prelude-ls": "^1.2.1",
-        "type-check": "^0.4.0",
-        "word-wrap": "^1.2.5"
+        "type-check": "^0.4.0"
       },
       "engines": {
         "node": ">= 0.8.0"
@@ -8436,9 +9000,9 @@
       }
     },
     "node_modules/react-is": {
-      "version": "18.3.1",
-      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
-      "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
+      "version": "18.2.0",
+      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.2.0.tgz",
+      "integrity": "sha512-xWGDIW6x921xtzPkhiULtthJHoJvBbF3q26fzloPCK0hsvxtPVelvftw3zjbHWSkR2km9Z+4uxbDDK/6Zw9B8w==",
       "dev": true
     },
     "node_modules/readable-stream": {
@@ -9080,9 +9644,9 @@
       }
     },
     "node_modules/stripe": {
-      "version": "14.25.0",
-      "resolved": "https://registry.npmjs.org/stripe/-/stripe-14.25.0.tgz",
-      "integrity": "sha512-wQS3GNMofCXwH8TSje8E1SE8zr6ODiGtHQgPtO95p9Mb4FhKC9jvXR2NUTpZ9ZINlckJcFidCmaTFV4P6vsb9g==",
+      "version": "14.24.0",
+      "resolved": "https://registry.npmjs.org/stripe/-/stripe-14.24.0.tgz",
+      "integrity": "sha512-r0JWz2quThXsFbp1pevkAAoDk4sw3kFMQEc2qvxMFUOhw/SFGqtAGz4vQgP/fMWzO28ljBNEiz68KqRx0JS3dw==",
       "dependencies": {
         "@types/node": ">=8.1.0",
         "qs": "^6.11.0"
@@ -9163,25 +9727,6 @@
         "node": ">= 6"
       }
     },
-    "node_modules/teeny-request/node_modules/node-fetch": {
-      "version": "2.7.0",
-      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
-      "integrity": "sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==",
-      "dependencies": {
-        "whatwg-url": "^5.0.0"
-      },
-      "engines": {
-        "node": "4.x || >=6.0.0"
-      },
-      "peerDependencies": {
-        "encoding": "^0.1.0"
-      },
-      "peerDependenciesMeta": {
-        "encoding": {
-          "optional": true
-        }
-      }
-    },
     "node_modules/test-exclude": {
       "version": "6.0.0",
       "resolved": "https://registry.npmjs.org/test-exclude/-/test-exclude-6.0.0.tgz",
@@ -9317,15 +9862,6 @@
         }
       }
     },
-    "node_modules/ts-jest/node_modules/yargs-parser": {
-      "version": "21.1.1",
-      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
-      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
-      "dev": true,
-      "engines": {
-        "node": ">=12"
-      }
-    },
     "node_modules/ts-node": {
       "version": "10.9.2",
       "resolved": "https://registry.npmjs.org/ts-node/-/ts-node-10.9.2.tgz",
@@ -9369,15 +9905,6 @@
         }
       }
     },
-    "node_modules/ts-node/node_modules/diff": {
-      "version": "4.0.2",
-      "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
-      "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",
-      "dev": true,
-      "engines": {
-        "node": ">=0.3.1"
-      }
-    },
     "node_modules/tsconfig-paths": {
       "version": "3.15.0",
       "resolved": "https://registry.npmjs.org/tsconfig-paths/-/tsconfig-paths-3.15.0.tgz",
@@ -9535,9 +10062,9 @@
       }
     },
     "node_modules/typescript": {
-      "version": "5.4.5",
-      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.4.5.tgz",
-      "integrity": "sha512-vcI4UpRgg81oIRUFwR0WSIHKt11nJ7SAVlYNIu+QpqeyXP+gpQJy/Z4+F0aGxSE4MqwjyXvW/TzgkLAx2AGHwQ==",
+      "version": "5.4.4",
+      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.4.4.tgz",
+      "integrity": "sha512-dGE2Vv8cpVvw28v8HCPqyb08EzbBURxDpuhJvTrusShUfGnhHBafDsLdS1EhhxyL6BJQE+2cT3dDPAv+MQ6oLw==",
       "dev": true,
       "bin": {
         "tsc": "bin/tsc",
@@ -9587,9 +10114,9 @@
       "optional": true
     },
     "node_modules/undici": {
-      "version": "5.28.4",
-      "resolved": "https://registry.npmjs.org/undici/-/undici-5.28.4.tgz",
-      "integrity": "sha512-72RFADWFqKmUb2hmmvNODKL3p9hcB6Gt2DOQMis1SEBaV6a4MH8soBvzg+95CYhCKPFedut2JY9bMfrDl9D23g==",
+      "version": "5.28.3",
+      "resolved": "https://registry.npmjs.org/undici/-/undici-5.28.3.tgz",
+      "integrity": "sha512-3ItfzbrhDlINjaP0duwnNsKpDQk3acHI3gVJ1z4fmwMK31k5G9OVIAMLSIaP6w4FaGkaAkN6zaQO9LUvZ1t7VA==",
       "dev": true,
       "peer": true,
       "dependencies": {
@@ -9812,7 +10339,7 @@
       "version": "1.2.5",
       "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
       "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
-      "devOptional": true,
+      "optional": true,
       "engines": {
         "node": ">=0.10.0"
       }
@@ -9898,12 +10425,12 @@
       }
     },
     "node_modules/yargs-parser": {
-      "version": "20.2.4",
-      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.4.tgz",
-      "integrity": "sha512-WOkpgNhPTlE73h4VFAFsOnomJVaovO8VqLDzy5saChRBFQFBoMYirowyW+Q9HB4HFF4Z7VZTiG3iSzJJA29yRA==",
-      "dev": true,
+      "version": "21.1.1",
+      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
+      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
+      "devOptional": true,
       "engines": {
-        "node": ">=10"
+        "node": ">=12"
       }
     },
     "node_modules/yargs-unparser": {
@@ -9933,15 +10460,6 @@
         "url": "https://github.com/sponsors/sindresorhus"
       }
     },
-    "node_modules/yargs/node_modules/yargs-parser": {
-      "version": "21.1.1",
-      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
-      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
-      "devOptional": true,
-      "engines": {
-        "node": ">=12"
-      }
-    },
     "node_modules/yn": {
       "version": "3.1.1",
       "resolved": "https://registry.npmjs.org/yn/-/yn-3.1.1.tgz",
diff --git a/functions/package.json b/functions/package.json
index a9bf52c..f4f9117 100644
--- a/functions/package.json
+++ b/functions/package.json
@@ -14,10 +14,10 @@
     "postdeploy:prod": "rm ./service-account-key.json",
     "postdeploy:dev": "rm ./service-account-key.json",
     "logs": "firebase functions:log",
-    "test:firestore": "jest --forceExit --detectOpenHandles --openHandlesTimeout 2500 tests/firestore-rules.spec.ts"
+    "test:firestore": "jest --forceExit --detectOpenHandles tests/firestore-rules.spec.ts"
   },
   "engines": {
-    "node": "20"
+    "node": "18"
   },
   "main": "lib/index.js",
   "dependencies": {
@@ -28,7 +28,7 @@
     "es6-promise-pool": "^2.5.0",
     "firebase-admin": "^11.11.1",
     "firebase-functions": "^4.9.0",
-    "nlpcloud": "^2.0.5",
+    "nlpcloud": "^1.0.48",
     "stripe": "^14.24.0",
     "uuid": "^9.0.1"
   },
@@ -54,4 +54,4 @@
     "glob": "8.1.0"
   },
   "private": true
-}
\ No newline at end of file
+}
diff --git a/functions/src/index.js b/functions/src/index.js
index 28e1e4e..3828ca7 100644
--- a/functions/src/index.js
+++ b/functions/src/index.js
@@ -16,8 +16,6 @@ import { logOnImprovementRequestWritten, logOnNoteWritten, logOnUserCreated, log
 import { onModeratorAdded, onModeratorDeleted } from './moderator'
 // Stripe functions
 import { createBillingPortalLink, createCheckoutSession, stripeWebhook } from './stripe'
-// Subscription plan functions
-import { onUserAddedToSubscriptionPlan, onUserRemovedFromSubscriptionPlan } from './subscriptionPlans'
 // Transcription functions
 import { transcribeFile } from './transcribe'
 // User functions
@@ -64,6 +62,3 @@ export { getSignedEmailForUser }
 
 // Stripe functions
 export { createBillingPortalLink, createCheckoutSession, stripeWebhook }
-
-// Subscription plan functions
-export { onUserAddedToSubscriptionPlan, onUserRemovedFromSubscriptionPlan }
diff --git a/functions/src/stripe.ts b/functions/src/stripe.ts
index cc91e41..226a311 100644
--- a/functions/src/stripe.ts
+++ b/functions/src/stripe.ts
@@ -6,7 +6,7 @@ import { CallableRequest, HttpsError, onCall, onRequest } from 'firebase-functio
 import Stripe from 'stripe'
 
 import { CustomerData, Price, Product } from './stripe-interfaces'
-import { SubscriptionDataType, SubscriptionNoteDataType, SubscriptionState, isUserProfileSubset } from './types'
+import { isUserProfileSubset } from './types'
 
 const stripeApiKey = defineSecret('STRIPE_API_KEY')
 const stripeWebhookSecret = defineSecret('STRIPE_WEBHOOK_SECRET')
@@ -34,7 +34,7 @@ const getStripeUidForUser = async (uid: string): Promise<string | undefined> =>
     .collection('users')
     .doc(uid)
     .collection('profile')
-    .doc('subscription')
+    .doc('system')
     .collection('stripe')
     .doc('customer')
 
@@ -68,7 +68,7 @@ const setStripeUidForUser = async (uid: string, stripeUid: string): Promise<admi
     .collection('users')
     .doc(uid)
     .collection('profile')
-    .doc('subscription')
+    .doc('system')
     .collection('stripe')
     .doc('customer')
 
@@ -219,7 +219,7 @@ export const createCheckoutSession = onCall(
         .collection('users')
         .doc(request.auth.uid)
         .collection('profile')
-        .doc('subscription')
+        .doc('system')
         .collection('checkoutSessions')
         .add({})
 
@@ -372,25 +372,7 @@ export const stripeWebhook = onRequest(
 )
 
 /**
- * Calculate avaliable notes for the user depending on if there's a NoteDataType object or not
- * @param {SubscriptionNoteDataType | undefined} oldNotes
- * @return {SubscriptionNoteDataType}
- */
-function calculateNotes(oldNotes: SubscriptionNoteDataType | undefined): SubscriptionNoteDataType {
-  const defaultNotes = { allowed: 15, created: 0 }
-
-  // If no notes then return the default notes
-  if (!oldNotes) return defaultNotes
-
-  // If the notes object is found, return a new object with old values if available or default values
-  return {
-    allowed: oldNotes.allowed ?? defaultNotes.allowed,
-    created: oldNotes.created ?? defaultNotes.created,
-  }
-}
-
-/**
- * Update the user's subscription status in Firestore
+ * Update the user's subscription status in Firestore and set it as a custom claim
  * @param {Stripe.Subscription} subscription - The Stripe subscription
  * @return {Promise<void>} - A promise that resolves when the subscription is updated
  */
@@ -404,67 +386,26 @@ const updateSubscription = async (subscription: Stripe.Subscription): Promise<vo
   // Get the user's firebase UID
   const uid = subscription.metadata.firebaseUID
 
-  if (!uid) {
-    throw new Error('updateSubscription: Invalid Firebase UID')
-  }
+  // Get the subscription reference
+  const subRef = db.collection('users').doc(uid).collection('profile').doc('system').collection('subscriptions')
 
-  try {
-    //
-    // Add the subscription to the user subscription collection (Stripe subscription details)
-    //
-
-    // Get the subscriptions collection reference
-    const subscriptionsRef = db
-      .collection('users')
-      .doc(uid)
-      .collection('profile')
-      .doc('subscription')
-      .collection('subscriptions')
-
-    // Add or merge the new subscription document
-    await subscriptionsRef.doc(subscription.id).set(subscription, { merge: true })
-
-    //
-    // Update the user's subscription state and state details (Internal subscription state)
-    //
-
-    // Get the subscription doc reference
-    const subscriptionDocRef = db.collection('users').doc(uid).collection('profile').doc('subscription')
-
-    // Get the currect subscription data
-    const subscriptionDoc = await subscriptionDocRef.get()
-
-    const data = subscriptionDoc.data() as SubscriptionDataType | undefined
-
-    // Create the new subscription details
-    const newSubscriptionDetails: SubscriptionDataType = {
-      state: subscription.status === 'active' ? SubscriptionState.SUBSCRIBED : SubscriptionState.UNSUBSCRIBED,
-      stateDetails: {
-        status: subscription.status,
-        trialType: null,
-        freeUntil: null,
-      },
-      notes: calculateNotes(data?.notes as SubscriptionNoteDataType | undefined),
-    }
+  // Add or merge the new subscription document
+  await subRef.doc(subscription.id).set(subscription, { merge: true })
 
-    // If subscription is deactivated, allow 15 more free notes to keep the user engaged.
-    if (data && data.state === SubscriptionState.SUBSCRIBED && subscription.status !== 'active') {
-      if (newSubscriptionDetails?.notes === null) {
-        newSubscriptionDetails.notes = {
-          allowed: 15,
-          created: 0,
-        }
-      } else {
-        newSubscriptionDetails.notes.allowed += 15
-      }
+  try {
+    // Get the user's custom claims
+    const { customClaims } = await admin.auth().getUser(uid)
+
+    // Set the user's custom claims
+    if (['trialing', 'active', 'canceled'].includes(subscription.status)) {
+      logger.log(`Setting subscription status ${subscription.status} as custom claim for user ${uid}`)
+      await admin.auth().setCustomUserClaims(uid, { ...customClaims, subscriptionStatus: subscription.status })
+    } else {
+      logger.log(`Removing subscription status as custom claim for user ${uid}`)
+      await admin.auth().setCustomUserClaims(uid, { ...customClaims, subscriptionStatus: null })
     }
-
-    logger.log(`Setting subscription state to ${newSubscriptionDetails.state} for user ${uid}`)
-
-    // Update the user subscription status
-    await subscriptionDocRef.set(newSubscriptionDetails)
   } catch (error) {
-    logger.error(`Error updating subscription status for user ${uid}`, error)
+    logger.error(`Error setting custom claim for user ${uid}`, error)
     return
   }
 }
diff --git a/functions/src/subscriptionPlans.ts b/functions/src/subscriptionPlans.ts
deleted file mode 100644
index 188273b..0000000
--- a/functions/src/subscriptionPlans.ts
+++ /dev/null
@@ -1,120 +0,0 @@
-import * as admin from 'firebase-admin'
-import * as functions from 'firebase-functions'
-import { Timestamp } from 'firebase-admin/firestore'
-
-import { SubscriptionDataType, SubscriptionState, TrialType } from './types'
-
-interface Plan {
-  freeUntil: Timestamp
-}
-
-/**
- * These functions are triggered when a users is added or removed from subscription plans listed in the "subscriptionPlans" collection.
- * The functions update the user's profile to reflect their subscription status.
- */
-
-/**
- * Add a document with the user's ID to the "users" subcollection of the plan document to add the user to the plan.
- * Sets the user's subscription status to "TRIAL" and the trial type to "FREE". The freeUntil date is set to the plan's freeUntil date.
- */
-export const onUserAddedToSubscriptionPlan = functions
-  .region('europe-west3')
-  .firestore.document('subscriptionPlans/{planId}/users/{userId}')
-  .onCreate(async (_, context) => {
-    // Get the ID of the plan and user documents.
-    const planId = context.params.planId
-    const uid = context.params.userId
-
-    try {
-      // Get the plan details
-      const plan = await admin.firestore().collection('subscriptionPlans').doc(planId).get()
-      if (!plan.exists) {
-        console.error(`Plan ${planId} not found when updating adding user ${uid}`)
-        return null
-      }
-      const planData = plan.data() as Plan
-
-      // Get the subscription doc reference
-      const subscriptionDocRef = admin
-        .firestore()
-        .collection('users')
-        .doc(uid)
-        .collection('profile')
-        .doc('subscription')
-
-      const subscriptionData: SubscriptionDataType = {
-        state: SubscriptionState.TRIAL,
-        stateDetails: {
-          trialType: TrialType.FREE,
-          freeUntil: planData.freeUntil,
-          status: null,
-        },
-        notes: {
-          allowed: 15,
-          created: 0,
-        },
-      }
-
-      await subscriptionDocRef.set(subscriptionData, { merge: true })
-
-      console.log(`User ${uid} added to subscription plan ${planId}`)
-    } catch (error) {
-      console.error(`Failed to update subscription state for user ${uid}`, error)
-    }
-    return null
-  })
-
-/**
- * Remove the user's document from the "users" subcollection of the plan document to remove the user from the plan.
- * If the user is on a trial, the trial type is set to "CONSUME_NOTES" with a default number of notes available to consume.
- */
-export const onUserRemovedFromSubscriptionPlan = functions
-  .region('europe-west3')
-  .firestore.document('subscriptionPlans/{planId}/users/{userId}')
-  .onDelete(async (_, context) => {
-    // Get the ID of the user document.
-    const uid = context.params.userId
-    const planId = context.params.planId
-
-    try {
-      // Get the subscription doc reference
-      const subscriptionDocRef = admin
-        .firestore()
-        .collection('users')
-        .doc(uid)
-        .collection('profile')
-        .doc('subscription')
-
-      const subscriptionDoc = await subscriptionDocRef.get()
-      if (!subscriptionDoc.exists) {
-        console.error(`Subscription doc not found for user ${uid}`)
-        return null
-      }
-
-      const data = subscriptionDoc.data()
-
-      // If the user is on a trial, update the trial type to consume notes
-      // If the user isn't on a trial assume the account is upgraded to a paid plan and do nothing
-      if (data?.state === SubscriptionState.TRIAL) {
-        const subscriptionData: SubscriptionDataType = {
-          state: SubscriptionState.TRIAL,
-          stateDetails: {
-            trialType: TrialType.CONSUME_NOTES,
-            freeUntil: null,
-            status: null,
-          },
-          notes: {
-            allowed: 15,
-            created: 0,
-          },
-        }
-
-        await subscriptionDocRef.set(subscriptionData, { merge: true })
-
-        console.log(`User ${uid} removed from subscription plan ${planId}`)
-      }
-    } catch (error) {
-      console.error(`Failed to update subscription doc for user ${uid}`, error)
-    }
-    return null
-  })
diff --git a/functions/src/transcribe.ts b/functions/src/transcribe.ts
index 23a7d03..69eec97 100644
--- a/functions/src/transcribe.ts
+++ b/functions/src/transcribe.ts
@@ -367,13 +367,7 @@ export const transcribeFile = onObjectFinalized(
     // Transcribe the audio file
     try {
       // Create the NLPCloud client
-      const client = new NLPCloudClient({
-        model: 'whisper',
-        token: nlpCloudApiKey.value(),
-        gpu: true,
-        lang: undefined,
-        async: true,
-      })
+      const client = new NLPCloudClient('whisper', nlpCloudApiKey.value(), true, undefined, true)
 
       // Create the Slack web client
       const slackWebClient = new WebClient(slackBotToken.value(), {
@@ -406,11 +400,7 @@ export const transcribeFile = onObjectFinalized(
 
       // Upload url to audio file
       const asrRequestUrl = audioEncodedFile === undefined ? url : undefined
-      const uploadResponse: AsrResponse = await client.asr({
-        url: asrRequestUrl,
-        encodedFile: audioEncodedFile,
-        inputLanguage: noteLanguage,
-      })
+      const uploadResponse: AsrResponse = await client.asr(asrRequestUrl, audioEncodedFile, noteLanguage)
 
       // If the upload was successful, the response will contain a url
       // to the transcription result that we can poll for.
@@ -420,17 +410,17 @@ export const transcribeFile = onObjectFinalized(
 
         // Poll for the transcription result
         let transcriptionResult = null
-        while (transcriptionResult?.status !== 200) {
+        while (!transcriptionResult || !transcriptionResult.data) {
           // Sleep for 10 seconds before checking the transcription status.
           // 1 minute audio takes about 10 seconds to transcribe
           const SLEEP_DURATION = 10000
           await new Promise((r) => setTimeout(r, SLEEP_DURATION))
 
           // Poll the transcription result
-          transcriptionResult = await client.asyncResult({ url: resultURL })
+          transcriptionResult = await client.asyncResult(resultURL)
 
           // Stop if the transcription failed
-          if (transcriptionResult?.status !== 200 && transcriptionResult?.status !== 202) {
+          if (transcriptionResult.status !== 200 && transcriptionResult.status !== 202) {
             // Report error to Slack
             await slackWebClient.chat.postMessage({
               channel: slackErrorNotificationChannel,
@@ -439,7 +429,7 @@ export const transcribeFile = onObjectFinalized(
                 {
                   color: 'danger',
                   title: 'NLP Transcription failed',
-                  text: `Status: ${transcriptionResult?.status} Message: ${transcriptionResult?.statusText}`,
+                  text: `Status: ${transcriptionResult.status} Message: ${transcriptionResult.statusText}`,
                   fallback: 'NLP Error transcribing file',
                 },
               ],
@@ -447,14 +437,14 @@ export const transcribeFile = onObjectFinalized(
 
             console.error(
               `Error transcribing file: ${filePath}
-              Status: ${transcriptionResult?.status}
-              Message: ${transcriptionResult?.statusText}`,
+              Status: ${transcriptionResult.status}
+              Message: ${transcriptionResult.statusText}`,
             )
 
             return Promise.reject(
               new Error(`Error transcribing file:
-              ${transcriptionResult?.status},
-              ${transcriptionResult?.statusText}`),
+              ${transcriptionResult.status},
+              ${transcriptionResult.statusText}`),
             )
           }
         }
diff --git a/functions/src/types.ts b/functions/src/types.ts
index 1a8eb44..600dc0d 100644
--- a/functions/src/types.ts
+++ b/functions/src/types.ts
@@ -51,33 +51,6 @@ export interface Statistics {
   lastSavedNote: Timestamp | null
 }
 
-export enum SubscriptionState {
-  TRIAL = 'trial',
-  SUBSCRIBED = 'subscribed',
-  UNSUBSCRIBED = 'unsubscribed',
-}
-
-export enum TrialType {
-  FREE = 'free',
-  CONSUME_NOTES = 'consume_notes',
-}
-
-export type SubscriptionNoteDataType = {
-  allowed: number
-  created: number
-}
-
-export type SubscriptionStateDetails = {
-  trialType: TrialType | null
-  freeUntil: Timestamp | null
-  status: string | null
-}
-
-export type SubscriptionDataType = {
-  notes: SubscriptionNoteDataType | null
-  state: SubscriptionState
-  stateDetails: SubscriptionStateDetails | null
-}
 /**
  * Validate UserProfile object
  * @param {unknown} obj Object to validate
diff --git a/functions/src/user.ts b/functions/src/user.ts
index f84e5bd..ec3d68f 100644
--- a/functions/src/user.ts
+++ b/functions/src/user.ts
@@ -6,7 +6,7 @@ import { defineSecret } from 'firebase-functions/params'
 import { DocumentOptions, onDocumentCreated } from 'firebase-functions/v2/firestore'
 import { v4 as uuidv4 } from 'uuid'
 
-import { SubscriptionDataType, SubscriptionState, TrialType, isUserJourneySubset } from './types'
+import { isUserJourneySubset } from './types'
 
 const sendGridApiKey = defineSecret('SENDGRID_API_KEY')
 
@@ -97,45 +97,6 @@ export const sendEmailOnUserCreated = functions
     }
   })
 
-const updateSubscriptionOnNoteCreated = async (uid: string) => {
-  try {
-    // Get the user subscription document
-    const subscriptionDocRef = admin.firestore().collection('users').doc(uid).collection('profile').doc('subscription')
-
-    const subscriptionDoc = await subscriptionDocRef.get()
-    const subscriptionData = subscriptionDoc.data() as SubscriptionDataType
-
-    if (subscriptionData?.state === SubscriptionState.TRIAL) {
-      const stateDetails = subscriptionData?.stateDetails
-      // Increment the notes created field if the user is on a trial of type "Consume notes"
-      if (stateDetails?.trialType === TrialType.CONSUME_NOTES) {
-        await subscriptionDocRef.update({
-          'notes.created': FieldValue.increment(1),
-        })
-      }
-
-      if (stateDetails?.trialType === TrialType.FREE) {
-        if (stateDetails.freeUntil && stateDetails.freeUntil.toMillis() < Date.now()) {
-          console.info(`User ${uid} free trial has expired`)
-          // TODO: Handle the case where the user is on a free trial that might have expired
-          // Move to a trial type Consume notes
-          // Email the user that the free trial has expired
-        }
-      }
-    }
-
-    if (subscriptionData?.state === SubscriptionState.UNSUBSCRIBED) {
-      // Increment the notes created field if the user is unsubscribed
-      await subscriptionDocRef.update({
-        'notes.created': FieldValue.increment(1),
-      })
-    }
-    // TODO: Handle case where notes.created is greater than notes.allowed
-  } catch (error) {
-    console.error(`Error updating subscription details on note created for user ${uid}`, error)
-  }
-}
-
 // Update user statistics when a note is created
 export const onUserNoteCreated = onDocumentCreated(
   {
@@ -168,12 +129,11 @@ export const onUserNoteCreated = onDocumentCreated(
       }
 
       // Get the user document
-      const uid = event.params.userId
-      const userDocRef = admin.firestore().collection('users').doc(uid)
+      const userDocRef = admin.firestore().collection('users').doc(event.params.userId)
       const userDoc = await userDocRef.get()
       const docData = userDoc.data()
 
-      // Get the userJourney field and check if the user is
+      // Get the userJoyrney field and check if the user is
       // "Active" and "At risk"
       const userJourney: unknown = docData?.userJourney
       if (isUserJourneySubset(userJourney)) {
@@ -183,9 +143,6 @@ export const onUserNoteCreated = onDocumentCreated(
         }
       }
 
-      // Update the subscription details
-      await updateSubscriptionOnNoteCreated(uid)
-
       // Update the note doc with the statisticsUpdated field
       return snapshot.ref
         .update({
diff --git a/functions/tests/firestore-rules.spec.ts b/functions/tests/firestore-rules.spec.ts
index c5dbf4b..c499553 100644
--- a/functions/tests/firestore-rules.spec.ts
+++ b/functions/tests/firestore-rules.spec.ts
@@ -114,18 +114,18 @@ describe('firestore-rules-spec', () => {
     expect(resultWrite).toBeUndefined()
   })
 
-  it('should be allowed to read user subscription profile but not write when authenticated', async () => {
+  it('should be allowed to read user system profile but not write when authenticated', async () => {
     const userId = 'happyuser'
 
     const authedCtx = testEnv.authenticatedContext(userId).firestore()
-    const readRefEmpty = getDoc(doc(authedCtx, `users/${userId}/profile/subscription`))
+    const readRefEmpty = getDoc(doc(authedCtx, `users/${userId}/profile/system`))
     const resultEmpty = await assertSucceeds(readRefEmpty)
 
     // no document exists yet, but we have access to the path
     expect(resultEmpty).toBeDefined()
 
     // write a doc to /profile/system fails
-    const writeRef = setDoc(doc(authedCtx, `users/${userId}/profile/subscription`), { foo: 'bar' })
+    const writeRef = setDoc(doc(authedCtx, `users/${userId}/profile/system`), { foo: 'bar' })
     const resultWrite = (await assertFails(writeRef)) as { code: string }
 
     expect(resultWrite.code).toBe('permission-denied')
diff --git a/public/index.html b/index.html
similarity index 56%
rename from public/index.html
rename to index.html
index c6523e9..a1d8466 100644
--- a/public/index.html
+++ b/index.html
@@ -3,16 +3,16 @@
   <head>
     <meta charset="utf-8" />
 
-    <link rel="apple-touch-icon" href="%PUBLIC_URL%/apple-touch-icon-iphone-60x60.png">
-    <link rel="apple-touch-icon" sizes="60x60" href="%PUBLIC_URL%/apple-touch-icon-ipad-76x76.png">
-    <link rel="apple-touch-icon" sizes="114x114" href="%PUBLIC_URL%/apple-touch-icon-iphone-retina-120x120.png">
-    <link rel="apple-touch-icon" sizes="144x144" href="%PUBLIC_URL%/apple-touch-icon-ipad-retina-152x152.png">
-    <link rel="apple-touch-icon" sizes="180x180" href="%PUBLIC_URL%/apple-touch-icon.png">
-    <link rel="icon" type="image/png" sizes="32x32" href="%PUBLIC_URL%/favicon-32x32.png">
-    <link rel="icon" type="image/png" sizes="16x16" href="%PUBLIC_URL%/favicon-16x16.png">
-    <link rel="mask-icon" href="%PUBLIC_URL%/safari-pinned-tab.svg" color="#5bbad5">
+    <link rel="apple-touch-icon" href="/apple-touch-icon-iphone-60x60.png">
+    <link rel="apple-touch-icon" sizes="60x60" href="/apple-touch-icon-ipad-76x76.png">
+    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-iphone-retina-120x120.png">
+    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-ipad-retina-152x152.png">
+    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
+    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
+    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
+    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
     <meta name="msapplication-TileColor" content="#fd9f96">
-    <meta name="msapplication-config" content="%PUBLIC_URL%/browserconfig.xml">
+    <meta name="msapplication-config" content="/browserconfig.xml">
     <meta name="theme-color" content="#ffffff">
 
     <meta name="viewport" content="initial-scale=1, width=device-width" />
@@ -24,7 +24,7 @@
       manifest.json provides metadata used when your web app is installed on a
       user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
     -->
-    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
+    <link rel="manifest" href="/manifest.json" />
 
     <title>Joy Notes</title>
 
@@ -32,6 +32,7 @@
   <body>
     <noscript>You need to enable JavaScript to run this app.</noscript>
     <div id="root"></div>
+    <script type="module" src="/src/index.jsx"></script>
     <!--
       This HTML file is a template.
       If you open it directly in the browser, you will see an empty page.
diff --git a/jest.config.js b/jest.config.js
new file mode 100644
index 0000000..c791982
--- /dev/null
+++ b/jest.config.js
@@ -0,0 +1,3 @@
+module.exports = {
+    testMatch: ['<rootDir>/tests/**/?(*.)+(spec|test).[jt]s?(x)'],
+}
\ No newline at end of file
diff --git a/package.json b/package.json
index 8477702..f6a9500 100644
--- a/package.json
+++ b/package.json
@@ -15,13 +15,19 @@
     "@testing-library/react": "^13.4.0",
     "@testing-library/user-event": "^13.5.0",
     "@typeform/embed-react": "^2.22.0",
-    "@types/jest": "^29.5.1",
     "@types/node": "^18.16.3",
     "@types/react": "^18.2.5",
     "@types/react-dom": "^18.2.3",
+    "@typescript-eslint/eslint-plugin": "^7.7.1",
+    "@typescript-eslint/parser": "^7.7.1",
     "analytics": "^0.8.9",
     "crisp-sdk-web": "^1.0.21",
-    "dotenv": "^16.0.3",
+    "dotenv": "^16.4.5",
+    "eslint": "^8.57.0",
+    "eslint-config-prettier": "^9.1.0",
+    "eslint-plugin-import": "^2.29.1",
+    "eslint-plugin-jsx-a11y": "^6.8.0",
+    "eslint-plugin-react": "^7.34.1",
     "firebase": "^10.4.0",
     "libphonenumber-js": "^1.10.51",
     "lottie-react": "^2.4.0",
@@ -33,48 +39,73 @@
     "react-international-phone": "^4.0.4",
     "react-router-dom": "^6.11.0",
     "react-screen-wake-lock": "^3.0.2",
-    "react-scripts": "^5.0.1",
     "typescript": "^4.9.5",
     "use-analytics": "^1.1.0",
     "web-vitals": "^2.1.4"
   },
   "scripts": {
-    "start:ci": "react-scripts start",
-    "start:dev": "env-cmd -f .env.development react-scripts start",
-    "start:prod": "env-cmd -f .env.production react-scripts start",
+    "start:ci": "vite",
+    "start:dev": "env-cmd -f .env.development vite",
+    "start:prod": "env-cmd -f .env.production vite",
     "start:emulator": "cd functions; npm i; npm run build; cd ..; firebase emulators:start",
-    "build": "react-scripts build",
-    "build:dev": "env-cmd -f .env.development react-scripts build",
-    "build:prod": "env-cmd -f .env.production react-scripts build",
-    "test:dev": "env-cmd -f .env.development react-scripts test",
-    "test:prod": "env-cmd -f .env.production react-scripts test",
+    "build": "tsc && vite build",
+    "build:dev": "env-cmd -f .env.development tsc && vite build",
+    "build:prod": "env-cmd -f .env.production tsc && vite build",
+    "test:dev": "env-cmd -f .env.development jest",
+    "test:prod": "env-cmd -f .env.production jest",
     "test:e2e": "playwright test",
     "deploy:dev": "firebase use dev && firebase deploy --except functions",
     "deploy:prod": "firebase use prod && firebase deploy --except functions",
-    "eject": "react-scripts eject",
-    "prepare": "husky"
+    "prepare": "husky",
+    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0"
   },
   "eslintConfig": {
-    "extends": ["react-app", "react-app/jest"]
+    "extends": [
+      "react-app",
+      "react-app/jest"
+    ]
   },
   "browserslist": {
-    "production": [">0.2%", "not dead", "not op_mini all"],
-    "development": ["last 1 chrome version", "last 1 firefox version", "last 1 safari version"]
+    "production": [
+      ">0.2%",
+      "not dead",
+      "not op_mini all"
+    ],
+    "development": [
+      "last 1 chrome version",
+      "last 1 firefox version",
+      "last 1 safari version"
+    ]
   },
   "devDependencies": {
     "@babel/plugin-proposal-private-property-in-object": "^7.21.11",
     "@playwright/test": "^1.41.2",
     "@trivago/prettier-plugin-sort-imports": "^4.3.0",
+    "@types/jest": "^29.5.12",
     "@types/react-beforeunload": "^2.1.5",
     "@types/use-analytics": "^0.0.0",
+    "@vitejs/plugin-react": "^4.2.1",
     "env-cmd": "^10.1.0",
     "husky": "^9.0.11",
+    "jest": "^29.7.0",
+    "jest-environment-jsdom": "^29.7.0",
     "lint-staged": "^15.2.2",
-    "prettier": "^3.2.5"
+    "prettier": "^3.2.5",
+    "sass": "^1.75.0",
+    "ts-jest": "^29.1.2",
+    "vite": "^5.2.10",
+    "vite-plugin-svgr": "^4.2.0",
+    "vite-tsconfig-paths": "^4.3.2"
   },
   "lint-staged": {
-    "src/**/*.{js,jsx,ts,tsx,json,css,scss,md}": ["prettier --write"],
-    "src/**/*.{js,jsx,ts,tsx,json}": ["eslint --max-warnings=0"],
-    "functions/src/**/*.ts": ["eslint --max-warnings=0"]
+    "src/**/*.{js,jsx,ts,tsx,json,css,scss,md}": [
+      "prettier --write"
+    ],
+    "src/**/*.{js,jsx,ts,tsx,json}": [
+      "eslint --max-warnings=0"
+    ],
+    "functions/src/**/*.ts": [
+      "eslint --max-warnings=0"
+    ]
   }
 }
diff --git a/playwright.config.ts b/playwright.config.ts
index 02357ed..dfbbe54 100644
--- a/playwright.config.ts
+++ b/playwright.config.ts
@@ -24,7 +24,7 @@ export default defineConfig({
   /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */
   use: {
     /* Base URL to use in actions like `await page.goto('/')`. */
-    baseURL: 'http://127.0.0.1:3000',
+    baseURL: 'http://localhost:3000',
 
     /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */
     trace: 'on-first-retry',
@@ -71,7 +71,7 @@ export default defineConfig({
   /* Run a local dev server before starting the tests */
   webServer: {
     command: 'npm run start:ci',
-    url: 'http://127.0.0.1:3000',
+    url: 'http://localhost:3000',
     reuseExistingServer: !process.env.CI,
     timeout: 120 * 1000,
   },
diff --git a/src/components/TrialNoticeHeader.tsx b/src/components/TrialNoticeHeader.tsx
index 9dee55d..9c9e4fb 100644
--- a/src/components/TrialNoticeHeader.tsx
+++ b/src/components/TrialNoticeHeader.tsx
@@ -7,14 +7,6 @@ import Typography from '@mui/joy/Typography'
 
 import UpgradeButton from 'components/UpgradeButton'
 import useSubscriptionHandler from 'hooks/useSubscriptionHandler'
-import { SubscriptionState } from 'types/subscriptionTypes'
-
-// The trial notice header is shown when the user is on a trial or unsubscribed
-// and has less than the FREE_NOTES_THRESHOLD free notes remaining
-const FREE_NOTES_THRESHOLD = 10
-
-const REDIRECTING = 'Redirecting...'
-const ACTIVATE_NOW = 'Activate now'
 
 export default function TrialNoticeHeader() {
   const location = useLocation()
@@ -23,11 +15,11 @@ export default function TrialNoticeHeader() {
     isLoading,
     fetchingCheckoutSession,
     freeNotesRemaining,
-    subscriptionData,
+    subscriptionStatus,
     upgradeSubscription,
   } = useSubscriptionHandler()
 
-  if (!showSubscriptionInfo()) {
+  if (!showSubscriptionInfo) {
     return null
   }
 
@@ -36,36 +28,18 @@ export default function TrialNoticeHeader() {
     return null
   }
 
-  // Only show the trial notice if the subscription details have loaded
-  if (isLoading) {
-    return null
-  }
-
-  // Only show amount of free notes remaining if the user is on a trial or unsubscribed
-  if (
-    !(subscriptionData?.state === SubscriptionState.TRIAL || subscriptionData?.state === SubscriptionState.UNSUBSCRIBED)
-  ) {
-    return null
-  }
-
-  // Only show the trial notice if free notes are less than the threshold
-  const freeNotes = freeNotesRemaining()
-  if (freeNotes === undefined) {
-    return null
-  }
-
-  // Don't show the trial notice if the user has more than the threshold of free notes
-  if (freeNotes > FREE_NOTES_THRESHOLD) {
+  // Only show the trial notice if the user is on a trial and the subscription details have loaded
+  if (isLoading || subscriptionStatus !== 'trialing' || freeNotesRemaining === undefined || freeNotesRemaining > 10) {
     return null
   }
 
   return (
     <Stack direction={isMobile ? 'column' : 'row'} alignItems="center" justifyContent="center" gap={2}>
       <Typography level="title-lg">
-        {freeNotes === 0 ? 'No free notes remaining' : `${freeNotes} free notes remaining`}
+        {freeNotesRemaining === 0 ? 'No free notes remaining' : `${freeNotesRemaining} free notes remaining`}
       </Typography>
       <UpgradeButton size="sm" onClick={upgradeSubscription}>
-        {fetchingCheckoutSession ? REDIRECTING : ACTIVATE_NOW}
+        {fetchingCheckoutSession ? 'Redirecting...' : 'Activate now'}
       </UpgradeButton>
     </Stack>
   )
diff --git a/src/components/guards/PrivateRoute.js b/src/components/guards/PrivateRoute.tsx
similarity index 100%
rename from src/components/guards/PrivateRoute.js
rename to src/components/guards/PrivateRoute.tsx
diff --git a/src/config/subscriptionPolicies.ts b/src/config/subscriptionPolicies.ts
deleted file mode 100644
index 54a7a20..0000000
--- a/src/config/subscriptionPolicies.ts
+++ /dev/null
@@ -1,68 +0,0 @@
-import { SubscriptionDataType, SubscriptionState, TrialType } from 'types/subscriptionTypes'
-import { UserProfileType } from 'types/userTypes'
-
-// Determines if the user has free notes remaining
-const notesLeftToConsume = (subscriptionData: SubscriptionDataType) => {
-  const { created, allowed } = subscriptionData?.notes || {}
-
-  // If the user has no notes data, allow them to record note
-  // TODO: Check if this is the correct behaviour, trigger error event maybe?
-  if (created === undefined || allowed === undefined) {
-    return true
-  }
-
-  // If the user has free notes remaining, allow them to record notes
-  return created < allowed
-}
-
-// Determines if the user is allowed to record notes
-export const isUserAllowedToRecordNewNote = (
-  userProfile: UserProfileType | null,
-  subscriptionData: SubscriptionDataType | undefined,
-) => {
-  // If the user profile is missing, log an error and return false
-  if (!userProfile) {
-    console.error('User profile is missing')
-    return false
-  }
-
-  // If the user doesn't have subscription data, allow them to record notes
-  if (!subscriptionData) {
-    return true
-  }
-
-  const subscriptionState = subscriptionData?.state
-
-  // If the user doesn't have subscription state set yet, or are registered outside of GB
-  // allow them to record notes
-  if (!subscriptionState || userProfile?.regCountryCode !== 'GB') {
-    return true
-  }
-
-  // If the user has subscribed, allow them to record notes
-  if (subscriptionState === SubscriptionState.SUBSCRIBED) {
-    return true
-  }
-
-  // If the user is on a trial, check the trial type
-  if (subscriptionState === SubscriptionState.TRIAL) {
-    const trialType = subscriptionData?.stateDetails?.trialType
-
-    // If the trial type is free, allow the user to record notes
-    if (trialType === TrialType.FREE) {
-      // TODO: Check free until date
-      const freeUntil = subscriptionData?.stateDetails?.freeUntil
-      return freeUntil && freeUntil.toDate() > new Date()
-    }
-
-    if (trialType === TrialType.CONSUME_NOTES) {
-      return notesLeftToConsume(subscriptionData)
-    }
-  }
-
-  if (subscriptionState === SubscriptionState.UNSUBSCRIBED) {
-    return notesLeftToConsume(subscriptionData)
-  }
-
-  return false
-}
diff --git a/src/hooks/useCrisp.ts b/src/hooks/useCrisp.ts
index ff1d81c..00c8fc4 100644
--- a/src/hooks/useCrisp.ts
+++ b/src/hooks/useCrisp.ts
@@ -39,7 +39,7 @@ const useCrisp = () => {
   const resetSession = () => {
     try {
       Crisp.setTokenId('')
-      Crisp.session.reset()
+      Crisp.session?.reset()
     } catch (error) {
       // Ignore error that occurs when Crisp is not initialized
       if (error instanceof TypeError && error.message === 'window.$crisp.do is not a function') {
diff --git a/src/hooks/useMediaRecorder.ts b/src/hooks/useMediaRecorder.ts
index 56b3bb5..8446161 100644
--- a/src/hooks/useMediaRecorder.ts
+++ b/src/hooks/useMediaRecorder.ts
@@ -22,7 +22,6 @@ interface UseMediaRecorderResult {
   resumeRecording: () => void
   stopRecording: () => void
   clearRecording: () => void
-  saveRecordingToLocalDevice: (fileName: string) => void
 }
 
 const useMediaRecorder = (options: UseMediaRecorderOptions): UseMediaRecorderResult => {
@@ -102,59 +101,60 @@ const useMediaRecorder = (options: UseMediaRecorderOptions): UseMediaRecorderRes
     return supportedTypes.length === 0 ? undefined : supportedTypes[0]
   }
 
-  // Initialize MediaRecorder.
-  async function initMediaRecorder() {
-    try {
-      let mimeType: string | undefined
+  // Initialize MediaRecorder on mount.
+  useEffect(() => {
+    // Error handling for unsupported browsers.
+    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {
+      setError('Media Devices or User Media not supported in your browser.')
+      return
+    }
 
-      if (options.audio && !options.video) {
-        mimeType = getSupportedMediaType(['audio/webm', 'audio/ogg', 'audio/mp4', 'audio/mpeg', 'audio/wav'])
-      } else if (options.video) {
-        mimeType = getSupportedMediaType(['video/webm', 'video/mp4'])
-      }
+    // Initialize MediaRecorder.
+    async function initMediaRecorder() {
+      try {
+        let mimeType: string | undefined
 
-      if (mimeType === undefined) {
-        setError('No supported media type available for recording.')
-        return
-      }
+        if (options.audio && !options.video) {
+          mimeType = getSupportedMediaType(['audio/webm', 'audio/ogg', 'audio/mp4', 'audio/mpeg', 'audio/wav'])
+        } else if (options.video) {
+          mimeType = getSupportedMediaType(['video/webm', 'video/mp4'])
+        }
 
-      setMimeType(mimeType)
+        if (mimeType === undefined) {
+          setError('No supported media type available for recording.')
+          return
+        }
 
-      const stream = await navigator.mediaDevices.getUserMedia(options)
-      mediaRecorderRef.current = new MediaRecorder(stream, { mimeType: mimeType })
+        setMimeType(mimeType)
 
-      mediaRecorderRef.current.ondataavailable = (event: BlobEvent) => {
-        if (event.data.size > 0) {
-          recordedChunksRef.current.push(event.data)
+        const stream = await navigator.mediaDevices.getUserMedia(options)
+        mediaRecorderRef.current = new MediaRecorder(stream, { mimeType: mimeType })
+
+        mediaRecorderRef.current.ondataavailable = (event: BlobEvent) => {
+          if (event.data.size > 0) {
+            recordedChunksRef.current.push(event.data)
+          }
         }
-        stream.getTracks().forEach((t) => t.stop())
-      }
 
-      mediaRecorderRef.current.onerror = (event: Event) => {
-        setError(`MediaRecorder Error: ${(event as ErrorEvent).error}`)
-      }
+        mediaRecorderRef.current.onerror = (event: Event) => {
+          setError(`MediaRecorder Error: ${(event as ErrorEvent).error}`)
+        }
 
-      mediaRecorderRef.current.onstop = () => {
-        setRecordingComplete(true)
-        if (intervalIdRef?.current) {
-          window.clearInterval(intervalIdRef.current)
-          intervalIdRef.current = null
+        mediaRecorderRef.current.onstop = () => {
+          setRecordingComplete(true)
+          if (intervalIdRef?.current) {
+            window.clearInterval(intervalIdRef.current)
+            intervalIdRef.current = null
+          }
         }
-      }
 
-      initializeAudioAnalysis(stream)
-    } catch (err) {
-      setError(`Error initializing MediaRecorder: ${err}`)
+        initializeAudioAnalysis(stream)
+      } catch (err) {
+        setError(`Error initializing MediaRecorder: ${err}`)
+      }
     }
-  }
 
-  // Initialize MediaRecorder on mount.
-  useEffect(() => {
-    // Error handling for unsupported browsers.
-    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {
-      setError('Media Devices or User Media not supported in your browser.')
-      return
-    }
+    initMediaRecorder()
 
     // Clean up on unmount.
     return () => {
@@ -180,8 +180,7 @@ const useMediaRecorder = (options: UseMediaRecorderOptions): UseMediaRecorderRes
   }, [])
 
   // Handler functions for recording controls.
-  const startRecording = async () => {
-    await initMediaRecorder()
+  const startRecording = () => {
     if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'inactive') {
       recordedChunksRef.current = []
       mediaRecorderRef.current.start()
@@ -220,39 +219,6 @@ const useMediaRecorder = (options: UseMediaRecorderOptions): UseMediaRecorderRes
     recordedChunksRef.current = []
   }
 
-  /**
-   * Downloads the recorded audio as a file with the provided name.
-   * If no name is provided, the file will be named 'recording'.
-   *
-   * @param fileName - The name of the file to download.
-   * @return {void}
-   */
-  const saveRecordingToLocalDevice = (fileName: string = 'recording') => {
-    if (!recordedChunksRef.current) {
-      console.error('No recorded chunks available for download.')
-      return
-    }
-    const mediaMimeType = mediaRecorderRef.current?.mimeType ?? mimeType
-    const contentType = mediaMimeType?.trim() ?? 'unknownMimeType'
-    const audioBlob: Blob = new Blob(recordedChunksRef.current, { type: contentType })
-
-    const link = document.createElement('a')
-    link.href = URL.createObjectURL(audioBlob)
-    link.download = fileName
-    link.addEventListener(
-      'click',
-      () => {
-        // Remove the link after a fixed delay.
-        // Without this timeout, Chrome will not download the file.
-        setTimeout(() => {
-          URL.revokeObjectURL(link.href)
-        }, 5000)
-      },
-      { once: true },
-    )
-    link.dispatchEvent(new MouseEvent('click'))
-  }
-
   // Return the state and handlers.
   return {
     mimeType,
@@ -269,7 +235,6 @@ const useMediaRecorder = (options: UseMediaRecorderOptions): UseMediaRecorderRes
     resumeRecording,
     stopRecording,
     clearRecording,
-    saveRecordingToLocalDevice,
   }
 }
 
diff --git a/src/hooks/useSubscriptionHandler.ts b/src/hooks/useSubscriptionHandler.ts
index 776d400..0df4bcb 100644
--- a/src/hooks/useSubscriptionHandler.ts
+++ b/src/hooks/useSubscriptionHandler.ts
@@ -1,12 +1,13 @@
-import { useEffect, useState } from 'react'
+import { useEffect, useMemo, useState } from 'react'
 
-import { isUserAllowedToRecordNewNote } from 'config/subscriptionPolicies'
+import { NUM_FREE_NOTES } from 'config'
 import { useAuth } from 'context/AuthContext'
 import { useSnackbar } from 'context/SnackbarContext'
-import { DocumentData, collection, doc, getDocs, onSnapshot, query } from 'firebase/firestore'
+import { IdTokenResult } from 'firebase/auth'
+import { DocumentData, collection, getDocs, query } from 'firebase/firestore'
 import { httpsCallable } from 'firebase/functions'
+import { useUserStatistics } from 'hooks/useUserStatistics'
 import { db, functions } from 'services/firebase'
-import { SubscriptionDataType } from 'types/subscriptionTypes'
 
 import { useUserProfile } from './useUserProfile'
 
@@ -19,50 +20,56 @@ interface BillingPortalResponse {
   billingPortalUrl: string
 }
 
+export enum SubscriptionStatus {
+  ACTIVE = 'active',
+  CANCELED = 'canceled',
+  TRIALING = 'trialing',
+}
+
 // Custom hook to handle subscription status and actions
 // such as upgrading subscription and opening the billing portal
 const useSubscriptionHandler = () => {
-  const [subscriptionData, setSubscriptionData] = useState<SubscriptionDataType>()
+  const [subscriptionStatus, setSubscriptionStatus] = useState<SubscriptionStatus>()
   const [isLoading, setIsLoading] = useState<boolean>(true)
   const { currentUser } = useAuth()
+  const [userStatistics] = useUserStatistics()
   const [userProfile] = useUserProfile()
   const { openSnackbar } = useSnackbar()
   const [fetchingBillingPortal, setFetchingBillingPortal] = useState<boolean>(false)
   const [fetchingCheckoutSession, setFetchingCheckoutSession] = useState<boolean>(false)
 
-  const freeNotesRemaining = (): number | undefined => {
-    if (subscriptionData?.notes?.allowed === undefined || subscriptionData?.notes?.created === undefined) {
+  // Calculate the number of free notes remaining
+  const freeNotesRemaining: number | undefined = useMemo(() => {
+    if (userStatistics?.totalSavedNotes === undefined) {
       return undefined
     }
-    const remainingNotes = Math.max(subscriptionData.notes.allowed - subscriptionData.notes.created, 0)
+    const remainingNotes = Math.max(NUM_FREE_NOTES - userStatistics.totalSavedNotes, 0)
     return remainingNotes
-  }
+  }, [userStatistics])
 
   useEffect(() => {
-    setIsLoading(true)
-    // Listen to subscription document changes
-    const subscriptionDocRef = doc(db, `users/${currentUser?.uid}/profile/subscription`, '')
-    const unsubscribe = onSnapshot(
-      subscriptionDocRef,
-      (docSnap) => {
-        if (docSnap.exists()) {
-          const data = docSnap.data() as SubscriptionDataType
-          setSubscriptionData(data)
-        }
-        setIsLoading(false)
-      },
-      (error) => {
-        setSubscriptionData(undefined)
-        setIsLoading(false)
-      },
-      () => {
-        setIsLoading(false)
-      },
-    )
-    return () => unsubscribe()
+    const fetchSubscriptionStatus = async () => {
+      setIsLoading(true)
+      const idTokenResult: IdTokenResult = await currentUser.getIdTokenResult()
+      switch (idTokenResult.claims?.subscriptionStatus) {
+        case 'active':
+          setSubscriptionStatus(SubscriptionStatus.ACTIVE)
+          break
+        case 'canceled':
+          setSubscriptionStatus(SubscriptionStatus.CANCELED)
+          break
+        default:
+          setSubscriptionStatus(SubscriptionStatus.TRIALING)
+          break
+      }
+      setIsLoading(false)
+    }
+
+    if (currentUser) {
+      fetchSubscriptionStatus()
+    }
   }, [currentUser])
 
-  // Opens the Stripe billing portal in a this tab
   const openBillingPortal = async () => {
     if (fetchingBillingPortal) {
       return
@@ -128,7 +135,7 @@ const useSubscriptionHandler = () => {
       // Get the products
       const products = await fetchProducts()
       if (products.length === 0) {
-        openSnackbar('Could not get subscription options. Please try again.', 'danger')
+        openSnackbar('Could not get subsciption options. Please try again.', 'danger')
         return
       }
       // Get the first product and its price
@@ -159,21 +166,19 @@ const useSubscriptionHandler = () => {
   }
 
   // Determine if the user is allowed to record notes
-  const allowNotesRecording = () => {
-    return isUserAllowedToRecordNewNote(userProfile, subscriptionData)
-  }
+  const allowNotesRecording =
+    subscriptionStatus === SubscriptionStatus.ACTIVE ||
+    (subscriptionStatus === SubscriptionStatus.TRIALING && (freeNotesRemaining ?? 0) > 0) ||
+    userProfile?.regCountryCode !== 'GB'
 
   // Determine if the subscription info should be shown
-  // Only show for users in the UK with subscription data available
-  const showSubscriptionInfo = () => {
-    return userProfile?.regCountryCode === 'GB' && subscriptionData !== undefined
-  }
+  const showSubscriptionInfo = userProfile?.regCountryCode === 'GB'
 
   return {
     showSubscriptionInfo,
     allowNotesRecording,
     isLoading,
-    subscriptionData,
+    subscriptionStatus,
     freeNotesRemaining,
     upgradeSubscription,
     fetchingCheckoutSession,
diff --git a/src/index.js b/src/index.jsx
similarity index 100%
rename from src/index.js
rename to src/index.jsx
diff --git a/src/layouts/AuthPageLayout.tsx b/src/layouts/AuthPageLayout.tsx
index 5953c1a..508c6d3 100644
--- a/src/layouts/AuthPageLayout.tsx
+++ b/src/layouts/AuthPageLayout.tsx
@@ -4,6 +4,8 @@ import { Outlet } from 'react-router-dom'
 import Box from '@mui/joy/Box'
 import Typography from '@mui/joy/Typography'
 
+import NotesLandingBackground from 'assets/images/notes_landing_background.jpg'
+
 export default function AuthPageLayout() {
   return (
     <>
@@ -56,7 +58,7 @@ export default function AuthPageLayout() {
           backgroundSize: 'cover',
           backgroundPosition: 'center',
           backgroundRepeat: 'no-repeat',
-          backgroundImage: `url(${require('assets/images/notes_landing_background.jpg')})`,
+          backgroundImage: `url(${NotesLandingBackground})`,
           [theme.getColorSchemeSelector('dark')]: {
             backgroundImage: 'url(https://images.unsplash.com/photo-1572072393749-3ca9c8ea0831)',
           },
diff --git a/src/pages/Account/SubscriptionsCard.tsx b/src/pages/Account/SubscriptionsCard.tsx
index 632b587..baa7654 100644
--- a/src/pages/Account/SubscriptionsCard.tsx
+++ b/src/pages/Account/SubscriptionsCard.tsx
@@ -3,123 +3,7 @@ import React from 'react'
 import { Box, Button, Card, Divider, Stack, Typography } from '@mui/joy'
 
 import UpgradeButton from 'components/UpgradeButton'
-import useSubscriptionHandler from 'hooks/useSubscriptionHandler'
-import { SubscriptionDataType, SubscriptionState, TrialType } from 'types/subscriptionTypes'
-
-const REDIRECTING = 'Redirecting...'
-const ACTIVATE_NOW = 'Activate now'
-const MANAGE_SUBSCRIPTION = 'Manage your subscription'
-const SUBSCRIBE_NOW = 'Subscribe now'
-
-const FreeNotesInfo: React.FC<{ freeNotesRemaining: () => number | undefined }> = ({ freeNotesRemaining }) => (
-  <>
-    {freeNotesRemaining() === 0 && (
-      <Typography level="body-md" alignSelf={'center'}>
-        Activate your account to get unlimited notes
-      </Typography>
-    )}
-  </>
-)
-
-interface NotesTrialInfoProps {
-  freeNotesRemaining: () => number | undefined
-  upgradeSubscription: () => Promise<void>
-  fetchingCheckoutSession: boolean
-}
-
-const NotesTrialInfo: React.FC<NotesTrialInfoProps> = ({
-  freeNotesRemaining,
-  upgradeSubscription,
-  fetchingCheckoutSession,
-}) => (
-  <>
-    <Typography level="title-sm">Your current plan</Typography>
-    <Typography level="body-sm">Trial</Typography>
-    <Typography level="title-sm">Free notes remaining</Typography>
-    <Typography level="body-sm">{freeNotesRemaining()}</Typography>
-    <FreeNotesInfo freeNotesRemaining={freeNotesRemaining} />
-
-    <Box sx={{ display: 'flex', justifyContent: 'center' }}>
-      <UpgradeButton onClick={upgradeSubscription}>
-        {fetchingCheckoutSession ? REDIRECTING : ACTIVATE_NOW}
-      </UpgradeButton>
-    </Box>
-  </>
-)
-
-interface FreeTrialInfoProps {
-  subscriptionData: SubscriptionDataType | null
-  freeNotesRemaining: () => number | undefined
-  upgradeSubscription: () => Promise<void>
-  fetchingCheckoutSession: boolean
-}
-
-const FreeTrialInfo: React.FC<FreeTrialInfoProps> = ({
-  subscriptionData,
-  freeNotesRemaining,
-  upgradeSubscription,
-  fetchingCheckoutSession,
-}) => (
-  <>
-    <Typography level="title-sm">Your current plan</Typography>
-    <Typography level="body-sm">Trial</Typography>
-    <Typography level="title-sm">Free until</Typography>
-    <Typography level="body-sm">
-      {subscriptionData?.stateDetails?.freeUntil
-        ? subscriptionData?.stateDetails?.freeUntil.toDate().toLocaleDateString()
-        : ''}
-    </Typography>
-
-    <FreeNotesInfo freeNotesRemaining={freeNotesRemaining} />
-
-    <Box sx={{ display: 'flex', justifyContent: 'center' }}>
-      <UpgradeButton onClick={upgradeSubscription}>
-        {fetchingCheckoutSession ? REDIRECTING : ACTIVATE_NOW}
-      </UpgradeButton>
-    </Box>
-  </>
-)
-
-interface SubscribedInfoProps {
-  openBillingPortal: () => void
-  fetchingBillingPortal: boolean
-}
-const SubscribedInfo: React.FC<SubscribedInfoProps> = ({ openBillingPortal, fetchingBillingPortal }) => (
-  <>
-    <Typography level="title-sm">Your current plan</Typography>
-    <Typography level="body-sm">Paid</Typography>
-    <Typography level="title-sm">Billing Cycle</Typography>
-    <Typography level="body-sm">Monthly</Typography>
-    <Box sx={{ display: 'flex', justifyContent: 'center' }}>
-      <Button onClick={openBillingPortal} variant="plain">
-        {fetchingBillingPortal ? REDIRECTING : MANAGE_SUBSCRIPTION}
-      </Button>
-    </Box>
-  </>
-)
-
-interface UnSubscribedInfoProps {
-  freeNotesRemaining: () => number | undefined
-  upgradeSubscription: () => Promise<void>
-  fetchingCheckoutSession: boolean
-}
-const UnSubscribedInfo: React.FC<UnSubscribedInfoProps> = ({
-  freeNotesRemaining,
-  upgradeSubscription,
-  fetchingCheckoutSession,
-}) => (
-  <>
-    <Typography level="title-sm">No active plan</Typography>
-    <Typography level="title-sm">Free notes remaining</Typography>
-    <Typography level="body-sm">{freeNotesRemaining()}</Typography>
-    <FreeNotesInfo freeNotesRemaining={freeNotesRemaining} />
-    <Box sx={{ display: 'flex', justifyContent: 'center' }}>
-      <UpgradeButton onClick={upgradeSubscription}>
-        {fetchingCheckoutSession ? REDIRECTING : SUBSCRIBE_NOW}
-      </UpgradeButton>
-    </Box>
-  </>
-)
+import useSubscriptionHandler, { SubscriptionStatus } from 'hooks/useSubscriptionHandler'
 
 // This component is used to display the subscription details in the account page
 function SubscriptionsCard() {
@@ -127,14 +11,14 @@ function SubscriptionsCard() {
     showSubscriptionInfo,
     isLoading,
     freeNotesRemaining,
-    subscriptionData,
+    subscriptionStatus,
     upgradeSubscription,
     fetchingCheckoutSession,
     openBillingPortal,
     fetchingBillingPortal,
   } = useSubscriptionHandler()
 
-  if (!showSubscriptionInfo()) {
+  if (!showSubscriptionInfo) {
     return null
   }
 
@@ -152,35 +36,63 @@ function SubscriptionsCard() {
       >
         {isLoading && <Typography level="body-md">Fetching subscription details...</Typography>}
 
-        {subscriptionData?.state === SubscriptionState.TRIAL &&
-          subscriptionData?.stateDetails?.trialType === TrialType.CONSUME_NOTES && (
-            <NotesTrialInfo
-              freeNotesRemaining={freeNotesRemaining}
-              upgradeSubscription={upgradeSubscription}
-              fetchingCheckoutSession={fetchingCheckoutSession}
-            />
-          )}
-
-        {subscriptionData?.state === SubscriptionState.TRIAL &&
-          subscriptionData?.stateDetails?.trialType === TrialType.FREE && (
-            <FreeTrialInfo
-              subscriptionData={subscriptionData}
-              freeNotesRemaining={freeNotesRemaining}
-              upgradeSubscription={upgradeSubscription}
-              fetchingCheckoutSession={fetchingCheckoutSession}
-            />
-          )}
-
-        {subscriptionData?.state === SubscriptionState.SUBSCRIBED && (
-          <SubscribedInfo openBillingPortal={openBillingPortal} fetchingBillingPortal={fetchingBillingPortal} />
+        {subscriptionStatus === SubscriptionStatus.CANCELED && (
+          <>
+            <Typography level="title-sm">No active plan</Typography>
+
+            <Typography level="title-sm">Free notes remaining</Typography>
+            <Typography level="body-sm">{freeNotesRemaining}</Typography>
+
+            {freeNotesRemaining === 0 && (
+              <Typography level="body-md" alignSelf={'center'}>
+                Subscribe to get unlimited notes
+              </Typography>
+            )}
+
+            <Box sx={{ display: 'flex', justifyContent: 'center' }}>
+              <UpgradeButton onClick={upgradeSubscription}>
+                {fetchingCheckoutSession ? 'Redirecting...' : 'Subscribe now'}
+              </UpgradeButton>
+            </Box>
+          </>
+        )}
+
+        {subscriptionStatus === SubscriptionStatus.TRIALING && (
+          <>
+            <Typography level="title-sm">Your current plan</Typography>
+            <Typography level="body-sm">Trial</Typography>
+
+            <Typography level="title-sm">Free notes remaining</Typography>
+            <Typography level="body-sm">{freeNotesRemaining}</Typography>
+
+            {freeNotesRemaining === 0 && (
+              <Typography level="body-md" alignSelf={'center'}>
+                Activate your account to get unlimited notes
+              </Typography>
+            )}
+
+            <Box sx={{ display: 'flex', justifyContent: 'center' }}>
+              <UpgradeButton onClick={upgradeSubscription}>
+                {fetchingCheckoutSession ? 'Redirecting...' : 'Activate now'}
+              </UpgradeButton>
+            </Box>
+          </>
         )}
 
-        {subscriptionData?.state === SubscriptionState.UNSUBSCRIBED && (
-          <UnSubscribedInfo
-            freeNotesRemaining={freeNotesRemaining}
-            upgradeSubscription={upgradeSubscription}
-            fetchingCheckoutSession={fetchingCheckoutSession}
-          />
+        {subscriptionStatus === SubscriptionStatus.ACTIVE && (
+          <>
+            <Typography level="title-sm">Your current plan</Typography>
+            <Typography level="body-sm">Paid</Typography>
+
+            <Typography level="title-sm">Billing Cycle</Typography>
+            <Typography level="body-sm">Monthly</Typography>
+
+            <Box sx={{ display: 'flex', justifyContent: 'center' }}>
+              <Button onClick={openBillingPortal} variant="plain">
+                {fetchingBillingPortal ? 'Redirecting...' : 'Manage your subscription'}
+              </Button>
+            </Box>
+          </>
         )}
       </Stack>
     </Card>
diff --git a/src/pages/Notes/NoteDetails.tsx b/src/pages/Notes/NoteDetails.tsx
index f8a3c23..14b6426 100644
--- a/src/pages/Notes/NoteDetails.tsx
+++ b/src/pages/Notes/NoteDetails.tsx
@@ -336,12 +336,12 @@ export default function NoteDetails() {
           <Typography fontSize="inherit">Note</Typography>
         </Breadcrumbs>
 
-        <Tooltip title={allowNotesRecording() ? '' : 'Upgrade to record notes'} placement="top">
+        <Tooltip title={allowNotesRecording ? '' : 'Upgrade to record notes'} placement="top">
           <Button
             size="sm"
             onClick={() => navigate('/recorder')}
             startDecorator={<Add />}
-            disabled={!allowNotesRecording()}
+            disabled={!allowNotesRecording}
           >
             New
           </Button>
diff --git a/src/pages/Notes/Notes.tsx b/src/pages/Notes/Notes.tsx
index f1ca8ea..89f4d22 100644
--- a/src/pages/Notes/Notes.tsx
+++ b/src/pages/Notes/Notes.tsx
@@ -215,12 +215,12 @@ export default function Notes() {
             Notes
           </Typography>
 
-          <Tooltip title={allowNotesRecording() ? '' : 'Upgrade to record notes'} placement="top">
+          <Tooltip title={allowNotesRecording ? '' : 'Upgrade to record notes'} placement="top">
             <Button
               size="sm"
               onClick={() => navigate('/recorder')}
               startDecorator={<Add />}
-              disabled={!allowNotesRecording()}
+              disabled={!allowNotesRecording}
             >
               New
             </Button>
diff --git a/src/pages/Recorder/Recorder.tsx b/src/pages/Recorder/Recorder.tsx
index 93ac364..7f63938 100644
--- a/src/pages/Recorder/Recorder.tsx
+++ b/src/pages/Recorder/Recorder.tsx
@@ -3,6 +3,7 @@ import { isMobile } from 'react-device-detect'
 import { Link as RouterLink, useNavigate } from 'react-router-dom'
 import { useWakeLock } from 'react-screen-wake-lock'
 
+import CloseIcon from '@mui/icons-material/Close'
 import DeleteForever from '@mui/icons-material/DeleteForever'
 import HomeIcon from '@mui/icons-material/Home'
 import InfoOutlinedIcon from '@mui/icons-material/InfoOutlined'
@@ -45,9 +46,6 @@ import AudioVolumeVisualizer from './AudioVolumeVisualizer'
 import RecorderInspiration from './RecorderInspiration'
 import RecorderOnboarding from './RecorderOnboarding'
 
-const UNKNOWN_MIME_TYPE: string = 'unknownMimeType'
-const UNKNOWN_MIME_TYPE_FILE_NAME: string = 'audio.unknown'
-
 interface FormElements extends HTMLFormControlsCollection {
   title: HTMLInputElement
   tags: HTMLInputElement
@@ -89,7 +87,6 @@ function Recorder() {
     pauseRecording,
     resumeRecording,
     stopRecording,
-    saveRecordingToLocalDevice,
   } = useMediaRecorder({ audio: true, video: false })
 
   const { isSupported, request, release } = useWakeLock({
@@ -178,16 +175,13 @@ function Recorder() {
     return addDoc(notesCollectionRef, notesData)
   }
 
-  // Get content type from mediaRecorder or use default
-  function getContentType(mediaRecorder: MediaRecorder | null, defaultMimeType: string | undefined) {
-    const mimeType = mediaRecorder?.mimeType?.trim() ?? defaultMimeType
-    return mimeType || UNKNOWN_MIME_TYPE
-  }
+  const UNKNOWN_MIME_TYPE: string = 'unknownMimeType'
 
   // Convert a MIME type to a file name
+  // UNKNOWN_MIME_TYPE returns 'audio.unknown'
   function mimeTypeToFileName(mimeType: string): string {
     if (mimeType === UNKNOWN_MIME_TYPE) {
-      return UNKNOWN_MIME_TYPE_FILE_NAME
+      return 'audio.unknown' // or some other default
     }
 
     // Replace the '/' in the MIME type with a '.'
@@ -205,17 +199,6 @@ function Recorder() {
     await deleteObject(storageRef)
   }
 
-  const saveRecordingToDevice = async () => {
-    try {
-      const contentType = getContentType(mediaRecorder, mimeType)
-      const fileName = mimeTypeToFileName(contentType)
-      saveRecordingToLocalDevice(fileName)
-    } catch {
-      console.error('Error saving recording to device')
-      alert('Error saving recording to device')
-    }
-  }
-
   const transcribeRecording = async () => {
     if (recordedChunks.length === 0) {
       console.log('No audio data available.')
@@ -254,13 +237,21 @@ function Recorder() {
       // Upload audio file to storage
       //
 
-      const contentType = getContentType(mediaRecorder, mimeType)
-      const metadata = { contentType }
-      const audioBlob = new Blob(recordedChunks, { type: contentType })
+      // Get the mediaMimeType from the mediaRecorder if available,
+      // otherwise use the mimeType from the useMediaRecorder hook
+      const { mimeType: mediaMimeType = mimeType } = mediaRecorder || {}
 
-      const storagePath = `users/${currentUser.uid}/recordings/${noteDocRef.id}/${mimeTypeToFileName(contentType)}`
-      const storageRef = ref(storage, storagePath)
+      const contentType = mediaMimeType?.trim() ?? UNKNOWN_MIME_TYPE
 
+      const metadata = {
+        contentType,
+      }
+
+      const audioBlob = new Blob(recordedChunks, { type: contentType })
+      const storageRef = ref(
+        storage,
+        'users/' + currentUser.uid + '/recordings/' + noteDocRef.id + '/' + mimeTypeToFileName(contentType),
+      )
       const uploadTask = uploadBytesResumable(storageRef, audioBlob, {
         customMetadata: metadata,
       })
@@ -284,10 +275,7 @@ function Recorder() {
           })
 
           // update uploadingState with error, keep other values
-          setUploadingState({
-            ...uploadingState,
-            error: 'Failed to upload the audio file. Reach out to us if this happen again.',
-          })
+          setUploadingState({ ...uploadingState, error: error.message })
         },
         () => {
           // Update note document with upload complete
@@ -424,14 +412,8 @@ function Recorder() {
                   You have not allowed microphone access
                 </Typography>
                 <Typography level="body-md">
-                  {isMobile ? (
-                    "Please navigate to your device's settings and enable microphone access for this site"
-                  ) : (
-                    <>
-                      Left click on the microphone icon in the address bar and select{' '}
-                      <Typography variant="solid">Allow</Typography>{' '}
-                    </>
-                  )}
+                  Left click on the microphone icon in the address bar and select{' '}
+                  <Typography variant="solid">Allow</Typography>{' '}
                 </Typography>
 
                 <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>
@@ -590,19 +572,25 @@ function Recorder() {
             </Box>
 
             {uploadingState.error && (
-              <>
-                <Alert startDecorator={<WarningIcon sx={{ mx: 0.5 }} />} variant="solid" color="danger">
-                  <Typography sx={{ color: 'white' }} fontWeight="md">
-                    {uploadingState.error}
-                  </Typography>
-                </Alert>
-                <Button onClick={saveRecordingToDevice} fullWidth>
-                  Download recording
-                </Button>
-                <Button onClick={() => navigate('/notes')} fullWidth>
-                  Back to notes
-                </Button>
-              </>
+              <Alert
+                startDecorator={<WarningIcon sx={{ mx: 0.5 }} />}
+                variant="solid"
+                color="danger"
+                endDecorator={
+                  <React.Fragment>
+                    <Button variant="solid" color="danger" sx={{ mr: 1 }}>
+                      Undo
+                    </Button>
+                    <IconButton variant="solid" size="sm" color="danger">
+                      <CloseIcon />
+                    </IconButton>
+                  </React.Fragment>
+                }
+              >
+                <Typography sx={{ color: 'white' }} fontWeight="md">
+                  {uploadingState.error}
+                </Typography>
+              </Alert>
             )}
           </Box>
 
diff --git a/src/pages/Subscription.tsx b/src/pages/Subscription.tsx
index 67dc40c..8fbcaba 100644
--- a/src/pages/Subscription.tsx
+++ b/src/pages/Subscription.tsx
@@ -8,6 +8,9 @@ import Button from '@mui/joy/Button'
 import CircularProgress from '@mui/joy/CircularProgress'
 import Typography from '@mui/joy/Typography'
 
+import { useSnackbar } from 'context/SnackbarContext'
+import { auth } from 'services/firebase'
+
 const SUBSCRIPTION_SUCCESS = 'success'
 const SUBSCRIPTION_CANCELED = 'canceled'
 
@@ -39,6 +42,7 @@ const CancelationMessage = () => (
 export default function Subscription() {
   const navigate = useNavigate()
   const location = useLocation()
+  const { openSnackbar } = useSnackbar()
 
   const [isLoading, setIsLoading] = useState(false)
   const [subscriptionResult, setSubscriptionResult] = useState<string | null>(null)
@@ -50,6 +54,25 @@ export default function Subscription() {
     setSubscriptionResult(result)
   }, [location.search])
 
+  // Force refresh the user's ID token to reflect the new subscription status
+  useEffect(() => {
+    const updateUserIdToken = async () => {
+      if (!auth.currentUser) {
+        console.log('No user is logged in')
+        return
+      }
+      try {
+        await auth.currentUser?.getIdToken(true)
+      } catch (error) {
+        openSnackbar('You might need to logout and login again for your subscription to activate.', 'neutral')
+        console.error(error)
+      }
+    }
+    updateUserIdToken()
+    // Only run this effect once, the user can not login or out from this page
+    // eslint-disable-next-line react-hooks/exhaustive-deps
+  }, [])
+
   const handleNavigation = (path: string) => {
     setIsLoading(true)
     navigate(path, { replace: true })
diff --git a/src/services/firebase.js b/src/services/firebase.js
index afd21ce..d6e4120 100644
--- a/src/services/firebase.js
+++ b/src/services/firebase.js
@@ -8,13 +8,13 @@ import { connectStorageEmulator, getStorage } from 'firebase/storage'
 
 // Set the firebase config from the environment variables
 const firebaseConfig = {
-  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,
-  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,
-  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,
-  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,
-  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,
-  appId: process.env.REACT_APP_FIREBASE_APP_ID,
-  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,
+  apiKey: import.meta.env.VITE_APP_FIREBASE_API_KEY,
+  authDomain: import.meta.env.VITE_APP_FIREBASE_AUTH_DOMAIN,
+  projectId: import.meta.env.VITE_APP_FIREBASE_PROJECT_ID,
+  storageBucket: import.meta.env.VITE_APP_FIREBASE_STORAGE_BUCKET,
+  messagingSenderId: import.meta.env.REACT_APP_FIREBASE_SENDER_ID,
+  appId: import.meta.env.VITE_APP_FIREBASE_APP_ID,
+  measurementId: import.meta.env.VITE_APP_FIREBASE_MEASUREMENT_ID,
 }
 
 // Initialize Firebase
@@ -26,33 +26,33 @@ export const db = getFirestore(app)
 export const storage = getStorage(app)
 
 // Set the debug token for App Check if it is enabled
-if (process.env.REACT_APP_FIREBASE_APP_CHECK_USE_DEBUG_TOKEN) {
-  window.FIREBASE_APPCHECK_DEBUG_TOKEN = process.env.REACT_APP_FIREBASE_APP_CHECK_DEBUG_TOKEN
+if (import.meta.env.VITE_APP_FIREBASE_APP_CHECK_USE_DEBUG_TOKEN) {
+  window.FIREBASE_APPCHECK_DEBUG_TOKEN = import.meta.env.VITE_APP_FIREBASE_APP_CHECK_DEBUG_TOKEN
 }
 
 // Initialize App Check with the reCAPTCHA enterprise key
-if (process.env.REACT_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY) {
+if (import.meta.env.VITE_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY) {
   initializeAppCheck(app, {
-    provider: new ReCaptchaEnterpriseProvider(process.env.REACT_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY),
+    provider: new ReCaptchaEnterpriseProvider(import.meta.env.VITE_APP_FIREBASE_APPCHECK_RECAPTCHA_KEY),
     isTokenAutoRefreshEnabled: true,
   })
 }
 
-if (process.env.REACT_APP_FIREBASE_USE_LOCAL_FUNCTIONS === 'true') {
+if (import.meta.env.VITE_APP_FIREBASE_USE_LOCAL_FUNCTIONS === 'true') {
   console.log('Using local functions')
   connectFunctionsEmulator(functions, 'localhost', 5001)
 }
-if (process.env.REACT_APP_FIREBASE_USE_LOCAL_AUTH === 'true') {
+if (import.meta.env.VITE_APP_FIREBASE_USE_LOCAL_AUTH === 'true') {
   console.log('Using local auth')
   connectAuthEmulator(auth, 'http://localhost:9099')
 }
 
-if (process.env.REACT_APP_FIREBASE_USE_LOCAL_FIRESTORE === 'true') {
+if (import.meta.env.REACT_APP_FIREBASE_USE_LOCAL_FIRESTORE === 'true') {
   console.log('Using local firestore')
   connectFirestoreEmulator(db, 'localhost', 8080)
 }
 
-if (process.env.REACT_APP_FIREBASE_USE_LOCAL_STORAGE === 'true') {
+if (import.meta.env.REACT_APP_FIREBASE_USE_LOCAL_STORAGE === 'true') {
   console.log('Using local firebase storage')
   connectStorageEmulator(storage, 'localhost', 9199)
 }
diff --git a/src/types/subscriptionTypes.ts b/src/types/subscriptionTypes.ts
deleted file mode 100644
index f5f23fc..0000000
--- a/src/types/subscriptionTypes.ts
+++ /dev/null
@@ -1,29 +0,0 @@
-import { Timestamp } from 'firebase/firestore'
-
-export enum SubscriptionState {
-  TRIAL = 'trial',
-  SUBSCRIBED = 'subscribed',
-  UNSUBSCRIBED = 'unsubscribed',
-}
-
-export enum TrialType {
-  FREE = 'free',
-  CONSUME_NOTES = 'consume_notes',
-}
-
-export type NoteData = {
-  allowed: number
-  created: number
-}
-
-export type SubscriptionStateDetails = {
-  trialType: TrialType | null
-  freeUntil: Timestamp | null
-  status: string | null
-}
-
-export type SubscriptionDataType = {
-  notes: NoteData | null
-  state: SubscriptionState
-  stateDetails: SubscriptionStateDetails | null
-}
diff --git a/src/vite-env.d.ts b/src/vite-env.d.ts
new file mode 100644
index 0000000..11f02fe
--- /dev/null
+++ b/src/vite-env.d.ts
@@ -0,0 +1 @@
+/// <reference types="vite/client" />
diff --git a/tsconfig.json b/tsconfig.json
index a3d4962..741421a 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -1,23 +1,25 @@
 {
   "compilerOptions": {
-    "target": "es5",
-    "lib": ["dom", "dom.iterable", "esnext"],
-    "allowJs": true,
-    "skipLibCheck": true,
-    "esModuleInterop": true,
-    "allowSyntheticDefaultImports": true,
-    "strict": true,
-    "forceConsistentCasingInFileNames": true,
-    "module": "esnext",
-    "moduleResolution": "node",
-    "resolveJsonModule": true,
-    "isolatedModules": true,
-    "noEmit": true,
-    "jsx": "react",
-    "paths": {
-      "@mui/material": ["./node_modules/@mui/joy"]
-    },
-    "baseUrl": "./src"
+	"target": "ESNext",
+	"lib": ["dom", "dom.iterable", "esnext"],
+	"types": ["vite/client", "vite-plugin-svgr/client"],
+	"allowJs": true,
+	"skipLibCheck": true,
+	"esModuleInterop": false,
+	"allowSyntheticDefaultImports": true,
+	"strict": true,
+	"forceConsistentCasingInFileNames": true,
+	"noFallthroughCasesInSwitch": true,
+	"module": "ESNext",
+	"moduleResolution": "node",
+	"resolveJsonModule": true,
+	"isolatedModules": true,
+	"noEmit": true,
+	"jsx": "react-jsx",
+	"paths": {
+		"@mui/material": ["./node_modules/@mui/joy"]
+	},
+	"baseUrl": "./src"
   },
   "include": ["src"]
-}
+}
\ No newline at end of file
diff --git a/vite.config.mts b/vite.config.mts
new file mode 100644
index 0000000..b8ead60
--- /dev/null
+++ b/vite.config.mts
@@ -0,0 +1,17 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+import viteTsconfigPaths from 'vite-tsconfig-paths';
+import svgr from 'vite-plugin-svgr';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+    plugins: [
+        react(),
+        viteTsconfigPaths(),
+        svgr({
+            include: '**/*.svg?react',
+        }),
+    ],
+    server: { open: true, port: 3000, },
+    build: { outDir: 'build', },
+});
\ No newline at end of file
